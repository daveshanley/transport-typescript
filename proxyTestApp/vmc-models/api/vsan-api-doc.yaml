# This document was created using swagger.io using spec.json
# There should be no Errors/Warnings in the doc
# Please upload this yaml in the editor at
# editor.swagger.io to verify against swagger standards.
# For vapi extensions - see https://confluence.eng.vmware.com/display/VAP/VAPI+Swagger+Vendor+Extensions
# Created on: 09/07/16
# Last updated: 2/15/17.

swagger: '2.0'
info:
  description: |
    VMware Cloud APIs
    =======================
    All APIs require an authentication token. This can be obtained by issuing a POST to */api/csp/am/api/login* with a JSON body of `{ "username": <username>, "password": <password> }`.

    This is a CSP API defined at: https://prd.csp.vmware.com/csp/api-docs#!/User_Log-in/logInUser

    Most APIs require an org identifier. This can be obtained by issuing a GET on */vmc/<service-prefix>api/orgs* and
    extract the
    *id* field

  version: '1.0'
  title: VMware Cloud APIs
  termsOfService: Terms of Service
  contact:
    name: VMware
  license:
    name: 'Copyright (c) 2016-2018 VMware, Inc. All rights reserved.'
  x-vmw-vapi-codegenconfig:
    packagename: com.vmware.skyscraper
host: localhost
basePath: /
securityDefinitions:
  api_key:
    type: apiKey
    name: csp-auth-token
    in: header
security:
  - api_key: []
tags:
  - name: org
    description: Operations on Organizations
  - name: features
    description: Operations on Features
  - name: task
    description: Operations on Tasks
  - name: operator
    description: Operations limited to user with operator privileges
  - name: auth
    description: Auth operations for UI
  - name: config
    description: VSAN Config Service
consumes:
  - application/json
produces:
  - application/json
paths:
#
# FeatureController
#
  /vmc/api/operator/features:
    get:
      tags:
        - features
        - operator
      summary: List all Features
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/operator/features/{featureId}:
    get:
      tags:
        - features
        - operator
      summary: Get a feature
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - operator
        - features
      summary: Update a feature
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/featureIdParam'
        - in: body
          name: feature
          description: Feature to be updated
          required: true
          schema:
            $ref: '#/definitions/SksFeaturePatchRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /vmc/api/operator/orgs/{org}/features:
    get:
      tags:
        - features
      summary: Get complete details of all the features with their evaluation status in the context an org.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/SksFeatureDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/operator/orgs/{org}/features/{featureId}:
    get:
      tags:
        - features
      summary: Get complete details of a feature with thier evaluation status in the context a an org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeatureDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/orgs/{org}/features:
    get:
      tags:
        - features
      summary: Get evaluation status for all features in the context of an org
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/FeatureEvaluationStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/orgs/{org}/features/{featureId}:
    get:
      tags:
        - features
      summary: Get evaluation status of a feature in the context of an org
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureEvaluationStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
#
# Task Controller
#
  /vmc/api/operator/tasks:
    get:
      tags:
        - task
        - operator
      summary: List all tasks for all organizations with optional filtering
      x-vmw-vapi-methodname: list
      x-vmw-vapi-servicename: tasks
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vmc/api/operator/tasks/{taskId}:
    post:
      tags:
        - task
        - operator
      summary: Operate on a task
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: tasks
      parameters:
        - name: taskId
          in: path
          description: taskId
          required: true
          type: string
        - name: action
          in: query
          description: |
            If = 'restart', failed task will be restarted.

            If = 'cancel' cancel the task.
          required: true
          type: string
        - name: sub_status
          in: query
          description: |
            If action=restart then start at this sub_status.

            If action=cancel then the field value is irrelevant.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid action or bad argument
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /vmc/api/operator/tasks/{taskId}/versions:
      get:
        tags:
          - task
          - operator
        summary: List all past versions of task (in desc order)
        x-vmw-vapi-methodname: operatorGetVersions
        x-vmw-vapi-servicename: tasks
        parameters:
          - name: taskId
            in: path
            description: taskId
            required: true
            type: string
          - name: max
            in: query
            description: |
              If not present, return all past versions of the task

              If a valid Integer, return past 'max' versions in desc order
              start/end params should not be passed if this is used
            required: false
            type: integer
          - name: start
            in: query
            description: |
              If not present, default = first version of the task
              It should be less than end param value, and not used if max param is passed
              If a valid Integer, this version would be the earliest in the response
              If value beyond the total task versions, this takes the last version
            required: false
            type: integer
          - name: end
            in: query
            description: |
              If not present, default = last version of the task
              It should be greater than the start param value, and not used if max param is passed
              If a valid Integer, this version would be the latest in the response
              If value beyond the total task versions, this takes the last version
            required: false
            type: integer
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                $ref: '#/definitions/Task'
          '400':
            description: Bad argument for query parameter(s)
            schema:
              $ref: '#/definitions/ErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Cannot find the task with given identifier
            schema:
              $ref: '#/definitions/ErrorResponse'
  /vmc/api/orgs/{org}/tasks:
    get:
      tags:
        - task
      summary: List all tasks for organization
      description: |
        List all tasks with optional filtering.
      x-vmw-vapi-methodname: list
      x-vmw-vapi-servicename: tasks
      parameters:
        - $ref: "#/parameters/orgParam"
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/orgs/{org}/tasks/{taskId}:
    get:
      tags:
        - task
      summary: Get task details
      description: |
        Retrieve details of a task.
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: tasks
      parameters:
        - $ref: "#/parameters/orgParam"
        - name: taskId
          in: path
          description: taskId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - task
      summary: Modify an existing task
      description: |
        Request that a running task be canceled.
        This is advisory only, some tasks may not be cancelable, and some tasks might take
        an arbitrary amount of time to respond to a cancelation request. The task must be monitored
        to determine subsequent status.
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: tasks
      parameters:
        - $ref: "#/parameters/orgParam"
        - name: taskId
          in: path
          description: taskId
          required: true
          type: string
        - name: action
          in: query
          description: 'If = ''cancel'', task will be canceled'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid action or bad argument
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
#
# Org Controller
#
  /vmc/api/orgs:
    get:
      tags:
        - org
      summary: Get organizations associated with calling user.
      description: |
        Return a list of all organizations the calling user (based on credential) is authorized on.
      x-vmw-vapi-methodname: list
      x-vmw-vapi-servicename: orgs
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/operator/orgs:
    get:
      tags:
        - orgs
        - operator
      summary: List all orgs
      x-vmw-vapi-methodname: list
      x-vmw-vapi-servicename: orgs
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/api/operator/orgs/{org}:
    patch:
      tags:
        - operator
        - org
      summary: Add or update org properties
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs
      parameters:
        - $ref: "#/parameters/orgParam"
        - in: body
          name: properties
          description: Properties
          required: true
          schema:
            $ref: "#/definitions/OrgProperties"
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Org does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - operator
        - org
      summary: Delete organization
      description: |
        SUBJECT TO CHANGE/Internal
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: "#/parameters/orgParam"
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /vmc/api/orgs/{org}:
    get:
      tags:
        - org
      summary: Get details of organization
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs
      parameters:
        - $ref: "#/parameters/orgParam"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /vmc/api/auth/token:
    get:
      tags:
        - auth
      summary: Get the current auth token
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthToken'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

# VSAN Config Service
  /vmc/vsan/api/orgs/{org}/config/constraints:
    get:
      tags:
        - config
      summary: Get constraints on cluster storage size for EBS-backed clusters.
      description: Get constraints on cluster storage size for EBS-backed clusters.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: config
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: provider
          in: query
          type: string
          required: true
          description: Cloud storage provider ID
        - name: numHosts
          in: query
          type: string
          required: true
          description: Number of hosts in cluster
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VsanConfigConstraints'
        '400':
          description: Invalid or missing parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/vsan/api/orgs/{org}/sddcs/{sddc}/clusters/{cluster}/config/constraints/hostAddition:
    get:
      tags:
        - config
      summary: Get constraints on cluster storage size when adding hosts to the cluster.
      description: >
        This API provides the storage choices available when adding hosts
        to a cluster. The constraints returned will give the minimum,
        maximum, and recommended capacities for the storage to be added to
        the cluster. The constraints also indicate the supported capacity
        stepping (offset from the minimum) that is allowable for a valid,
        but not necessarily recommended, configuration.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: hostAddition
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/clusterParam'
        - name: provider
          in: query
          type: string
          required: true
          description: Cloud storage provider ID
        - name: numHosts
          in: query
          type: string
          required: true
          description: Number of hosts to add to the cluster
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VsanConfigConstraints'
        '400':
          description: Invalid or missing parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/vsan/api/orgs/{org}/sddcs/{sddc}/clusters/{cluster}/config/constraints/hostRemoval:
    get:
      tags:
        - config
      summary: Get constraints on cluster storage size when removing hosts from the cluster.
      description: >
        This API provides the storage choices available when removing hosts
        from a cluster. The constraints returned will give the minimum,
        maximum, and recommended choices of capacity to remove from the
        cluster.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: hostRemoval
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/clusterParam'
        - name: provider
          in: query
          type: string
          required: true
          description: Cloud storage provider ID
        - name: numHosts
          in: query
          type: integer
          format: int32
          required: true
          description: Number of hosts to remove from the cluster
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VsanConfigConstraints'
        '400':
          description: Invalid or missing parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/vsan/api/orgs/{org}/designer/addHosts:
    post:
      tags:
        - config
      summary: Add hosts to a VSAN cluster design to get a new cluster design.
      description: Add hosts to a VSAN cluster design to get a new cluster design.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: addHosts
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - in: body
          name: addHostsSpec
          required: true
          schema:
            $ref: '#/definitions/VsanAddHostsSpec'
      responses:
        '202':
          description: 'Accepted'
          schema:
            $ref: '#/definitions/VsanAddHostsResult'
        '400':
          description: Invalid or missing parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vmc/vsan/api/orgs/{org}/designer/removeHosts:
    post:
      tags:
        - config
      summary: Remove hosts from a VSAN cluster design to get a new cluster design.
      description: Remove hosts from a VSAN cluster design to get a new cluster design.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: removeHosts
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - in: body
          name: removeHostsSpec
          required: true
          schema:
            $ref: '#/definitions/VsanRemoveHostsSpec'
      responses:
        '202':
          description: 'Accepted'
          schema:
            $ref: '#/definitions/VsanRemoveHostsResult'
        '400':
          description: Invalid or missing parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

definitions:
  AuthToken:
    type: object
    required:
      - auth_token
    properties:
      auth_token:
        type: string
  Task:
    type: object
    required:
      - created
      - id
      - start_time
      - status
      - sub_status
      - task_type
      - user_id
      - user_name
      - version
    properties:
      created:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      error_message:
        type: string
      id:
        type: string
      org_id:
        type: string
      params:
        type: object
      resource_id:
        type: string
        description: UUID of resources task is acting upon
      resource_type:
        type: string
        description: Type of resource being acted upon
      retries:
        type: integer
        format: int32
      start_time:
        type: string
      status:
        type: string
        enum:
          - STARTED
          - CANCELING
          - FINISHED
          - FAILED
          - CANCELED
      sub_status:
        type: string
      task_type:
        type: string
      task_version:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      version:
        type: integer
        format: int32
  SksFeature:
    type: object
    required:
      - id
      - description
      - enable
    properties:
      id:
        type: string
      description:
        type: string
      type:
        type: string
        enum:
          - INTERNAL
          - CUSTOMER
      category:
        type: string
        enum:
          - UI
          - SERVICE
          - E2E
      enable:
        type: boolean
      state:
        type: string
        enum:
          - ACTIVE
          - OBSOLETE
          - NOT_FOUND
      applicable_scope:
        $ref: '#/definitions/ApplicableScope'
      namespace:
         type: string
      is_base_feature:
         type: boolean
      additional_properties:
          type: object
          additionalProperties:
            type: string
  ApplicableScope:
    type: object
    properties:
      whitelisted_keys:
        type: array
        items:
          type: string
      blacklisted_keys:
        type: array
        items:
          type: string
      rollout_percent:
        type: integer
        format: int32
  FeatureEvaluationStatus:
    type: object
    properties:
      applicable_status:
        type: boolean
        readOnly: true
  SksFeatureDetails:
    type: object
    properties:
      feature:
         $ref: '#/definitions/SksFeature'
      status:
         $ref: '#/definitions/FeatureEvaluationStatus'
  SksFeaturePatchRequest:
    type: object
    properties:
      description:
        type: string
      enable:
        type: boolean
      applicable_scope:
        type: object
        additionalProperties:
          $ref: '#/definitions/ApplicableScopePatchRequest'
  ApplicableScopePatchRequest:
    type: object
    properties:
      rollout_percent:
        type: integer
        format: int32
      whitelisted_keys:
        type: array
        items:
          type: string
      add_whitelisted_keys:
        type: array
        items:
          type: string
      remove_whitelisted_keys:
        type: array
        items:
          type: string
      blacklisted_keys:
        type: array
        items:
          type: string
      add_blacklisted_keys:
        type: array
        items:
          type: string
      remove_blacklisted_keys:
        type: array
        items:
          type: string
  ErrorResponse:
    type: object
    required:
      - error_code
      - error_messages
      - status
      - path
      - retryable
    properties:
      error_code:
        type: string
        description: unique error code
      error_messages:
        type: array
        description: localized error messages
        items:
          type: string
      status:
        type: integer
        description: HTTP status code
      path:
        type: string
        description: Originating request URI
      retryable:
        type: boolean
        description: If true, client should retry operation
  Organization:
    type: object
    required:
      - created
      - display_name
      - id
      - name
      - org_state
      - user_id
      - user_name
      - version
    properties:
      created:
        type: string
        format: date-time
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
      properties:
        type: object
        properties:
          default:
            $ref: '#/definitions/OrgProperties'
      org_state:
        type: string
        enum:
          - CREATED
          - DELETED
      user_id:
        type: string
      user_name:
        type: string
      version:
        type: integer
        format: int32
  OrgProperties:
    type: object
    properties:
      values:
        type: object
        additionalProperties:
          type: string
  VsanConfigConstraints:
    type: object
    x-vmc-vsan-api:
    x-vmw-vapi-lifecyle-internal:
    description: >
      This describes the possible physical storage capacity choices for use with
      a given VsanStorageDesigner implementation.  These choices are specific
      to a customer-defined number of hosts per cluster.
    required:
      - num_hosts
      - min_capacity
      - max_capacity
      - recommended_capacities
    properties:
      num_hosts:
        type: integer
        format: int64
        description: Number of hosts in cluster.
      min_capacity:
        type: integer
        format: int64
        description: Minimum capacity supported for cluster (GiB).
      max_capacity:
        type: integer
        format: int64
        description: Maximum capacity supported for cluster (GiB).
      supported_capacity_increment:
        type: integer
        format: int64
        description: Increment to be added to min_capacity to result in a supported capacity (GiB).
      recommended_capacities:
        type: array
        description: List of supported capacities which may offer preferable performance (GiB).
        items:
          type: integer
          format: int64
          description: Recommended capacity.
  StorageVolume:
    type: object
    x-vmc-vsan-api:
    description: An existing storage volume.
    required:
      - id
      - size
      - encrypted
      - vendor_type
    properties:
      id:
        type: string
        format: uuid
        description: The unique identifier for the storage volume.
      size:
        type: integer
        format: int64
        description: Size of the volume (GiB).
      encrypted:
        type: boolean
        description: Indicates whether the volume is encrypted.
      vendor_type:
        type: string
        description: The specific type of storage to be allocated on the cloud provider.
        example: gp2
      iops:
        type: integer
        format: int64
        description: The IOPS capability of the volume, if known.
  VsanAddHostsResult:
    type: object
    x-vmc-vsan-api:
    description: The host configurations to add or modify when adding hosts to the cluster.
    required:
      - new_hosts_specs
    properties:
      new_hosts_specs:
        $ref: '#/definitions/VsanNewHostsConfigurationSpecs'
      hosts_with_new_storage:
        $ref: '#/definitions/VsanExistingHostsConfigurationSpecs'
      hosts_with_moved_storage:
        $ref: '#/definitions/VsanHostConfigurations'
  VsanRemoveHostsResult:
    type: object
    x-vmc-vsan-api:
    description: The host configurations to remove and the host configurations requiring alteration.
    required:
      - hosts_with_removed_storage
    properties:
      hosts_with_removed_storage:
        $ref: '#/definitions/VsanHostConfigurations'
      hosts_with_moved_storage:
        $ref: '#/definitions/VsanHostConfigurations'
  VsanAddHostsSpec:
    type: object
    x-vmc-vsan-api:
    description: A specification for adding hosts to a VSAN cluster.
    required:
      - total_size
      - num_new_hosts
      - provider
    properties:
      total_size:
        type: integer
        format: int64
        description: Total capacity size of the cluster after adding the hosts (GiB).
      num_new_hosts:
        type: integer
        format: int32
        description: Number of hosts to add to the cluster.
      provider:
        type: string
        description: Cloud storage provider ID of the configuration.
      existing_configurations:
        $ref: '#/definitions/VsanHostConfigurations'
  VsanRemoveHostsSpec:
    type: object
    x-vmc-vsan-api:
    description: A specification for removing hosts from a VSAN cluster.
    required:
      - total_size
      - existing_configurations
      - hosts_to_remove
      - provider
    properties:
      total_size:
        type: integer
        format: int64
        description: Total capacity size of the cluster, in GiB, after removing the hosts.
      existing_configurations:
        $ref: '#/definitions/VsanHostConfigurations'
      hosts_to_remove:
        type: array
        description: Host IDs, referenced in the existing configurations, that are to be removed.
        items:
          type: string
      provider:
        type: string
        description: Cloud storage provider ID of the configuration.
  VsanDiskGroup:
    type: object
    x-vmc-vsan-api:
    description: An instantiation of a VSAN disk group.
    required:
      - cache_volume
      - capacity_volumes
    properties:
      cache_volume:
        $ref: '#/definitions/StorageVolume'
      capacity_volumes:
        type: array
        items:
          $ref: '#/definitions/StorageVolume'
  StorageVolumeSpec:
    type: object
    x-vmc-vsan-api:
    description: Specification for creating a storage volume.
    required:
      - size
      - encrypted
      - vendor_type
    properties:
      size:
        type: integer
        format: int64
        description: Size of the volume, in GiB.
      encrypted:
        type: boolean
        description: Indicates whether the volume is encrypted.
      vendor_type:
        type: string
        description: The specific type of storage to be allocated on the cloud provider.
        example: gp2
      iops:
        type: integer
        format: int64
        description: The IOPS capability of the volume, if known.
  VsanDiskGroupSpec:
    type: object
    x-vmc-vsan-api:
    description: A specification for a disk group to be created.
    required:
      - cache_volume_spec
      - capacity_volume_specs
    properties:
      cache_volume_spec:
        $ref: '#/definitions/StorageVolumeSpec'
      capacity_volume_specs:
        type: array
        items:
          $ref: '#/definitions/StorageVolumeSpec'
  VsanHostConfiguration:
    type: object
    x-vmc-vsan-api:
    description: The storage configuration of a host.
    required:
      - diskgroups
    properties:
      diskgroups:
        type: array
        items:
          $ref: '#/definitions/VsanDiskGroup'
  VsanHostConfigurationSpec:
    type: object
    x-vmc-vsan-api:
    description: Specification for a host's configuration.
    required:
      - diskgroup_specs
    properties:
      diskgroup_specs:
        type: array
        items:
          $ref: '#/definitions/VsanDiskGroupSpec'
  VsanHostConfigurations:
    type: object
    x-vmc-vsan-api:
    description: Map of ESX Host ID to VsanHostConfiguration.
    additionalProperties:
      $ref: '#/definitions/VsanHostConfiguration'
  VsanExistingHostsConfigurationSpecs:
    type: object
    x-vmc-vsan-api:
    description: Map of ESX Host ID to existing host configuration.
    additionalProperties:
      $ref: '#/definitions/VsanHostConfigurationSpec'
  VsanNewHostsConfigurationSpecs:
    type: array
    x-vmc-vsan-api:
    description: List of VsanHostConfigurationSpec.
    items:
      $ref: '#/definitions/VsanHostConfigurationSpec'

parameters:
  orgParam:
    name: org
    in: path
    description: Organization identifier
    required: true
    type: string
  sddcParam:
    name: sddc
    in: path
    description: SDDC identifier
    required: true
    type: string
  clusterParam:
    name: cluster
    in: path
    description: Cluster identifier
    required: true
    type: string
  featureIdParam:
    name: featureId
    in: path
    description: Feature identifier
    required: true
    type: string
  filterParam:
    name: $filter
    in: query
    description: |
      Filter expression

      Binary Operators: 'eq', 'ne', 'lt', 'gt', 'le', 'ge'

      Nested attributes are composed using '.'

      Dates must be formatted as YYYY-MM-DD

      Strings should enclosed in single quotes, escape single quote with two single quotes

      The special literal 'created' will be mapped to the time the resource was first created.

      NOTE: currently only ANDs of ORs is implemented.

      NOTE2: currently only range operators are implemented for created date.

      Examples:

        - $filter=(created gt '2016-08-09') and (id eq 278710ff4e-6b6d-4d4e-aefb-ca637f38609e)
        - $filter=(created eq '2016-08-09')
        - $filter=(created gt '2016-08-09') and (sddc.status eq 'READY')
    required: false
    type: string

    # Suppress polymorphic definition unused warnings.
    x-suppress:
