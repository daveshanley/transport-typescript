# There should be no Errors/Warnings in the doc
# Please upload this yaml in the editor at
# editor.swagger.io to verify against swagger standards.
# For vapi extensions - see https://confluence.eng.vmware.com/display/VAP/VAPI+Swagger+Vendor+Extensions
# Created on: 09/07/16
# Last updated: 05/03/18.
#
# N.B. Be aware that model names are part of the API contract since SDKs etc that are generated use those names
#   to create classes.
#
# Tags:
#   We use 3 tags to identify authz
#   all-access - requires role SKYS_VMC_SENSITIVE (which is derived from org property allAccess)
#   impersonation - requires role SKYS_IMPERSONATION
#   operator - requires SKYS_OPERATOR_RO or SKYS_OPERATOR_RW

swagger: '2.0'
info:
  description: |
    * All VMware Cloud APIs require a valid authentication token; which can be obtained by issuing a `POST` to
      `/api/csp/am/api/auth/api-tokens/authorize` with a query parameter `refresh_token={refresh_token}` eg.
      ```
      curl -s -X POST \
          -H "Content-Type: application/json" \
          https://console.cloud.vmware.com/csp/gateway/am/api/auth/api-tokens/authorize?refresh_token={{refresh-token}}
      ```
    * This CSP API is defined at: `https://console.cloud.vmware.com/csp/gateway/api-docs#!/Authentication/getAccessTokenByApiRefreshToken`

    * The `refresh_token` used to get a valid authentication token can be obtained after successful login to
      following URL via a web browser: https://console.cloud.vmware.com/csp/gateway/portal/#/user/tokens.
    * Most VMware Cloud APIs require an org identifier.
      This can be obtained by issuing a `GET` on `/vmc/api/orgs` and extracting the `id` field
  version: '1.0'
  title: VMware Cloud APIs
  termsOfService: 'https://vmc.vmware.com/terms-and-conditions'
  contact:
    name: VMware
  license:
    name: 'Copyright (c) 2016-2018 VMware, Inc. All rights reserved.'
  x-vmw-vapi-codegenconfig:
    package-name: com.vmware.vmc
    tag-resources-by-url-path: true
host: vmc.vmware.com
basePath: /vmc/api
schemes:
  - https
securityDefinitions:
  api_key:
    type: apiKey
    name: csp-auth-token
    in: header
security:
  - api_key: []
tags:
  - name: orgs
    description: Organizations
  - name: features
    description: Features
  - name: subscription
    description: Subscriptions
  - name: task
    description: Tasks
  - name: sddc
    description: SDDCs
  - name: operator
    description: Operator
  - name: impersonation
    description: Privilege Impersonation
  - name: all-access
    description: All Access
  - name: publicip
    description: SDDC Public IPs
  - name: esx
    description: ESX Hosts
  - name: network
    description: SDDC Networks
  - name: awsAccount
    description: AWS accounts (operator only)
  - name: nodes
    description: Cluster Nodes
  - name: config
    description: Service Configuration
  - name: service-invitations
    description: Service Invitations
  - name: dns
    description: DNS
  - name: auth
    description: Authentication
  - name: delegated-admin
    description: Delegated Administration
  - name: notifications
    description: Webhook and Websocket Service Notifications
  - name: reservations
    description: Reservations and Maintenance Windows
  - name: account-linking
    description: AWS Account Connection Operations
  - name: sddc-template
    description: SDDC Configuration Template
  - name: oauth-client
    description: Manage service Oauth2 Clients
  - name: troubleshooting
    description: Network Troubleshooting
consumes:
  - application/json
produces:
  - application/json
paths:
#
# Auth info
#
  /auth/token:
    get:
      tags:
        - auth
      summary: Get the current users auth token.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: auth
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthToken'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /auth/time:
    get:
      tags:
        - auth
      summary: Get the current server time in millis.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: auth
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthTime'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /auth/identity-hash:
    get:
      tags:
        - auth
      summary: Get username hashes for remote services
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: auth
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthIdentityHash'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden


#
# Features Service API
#
  /orgs/{org}/features:
    get:
      tags:
        - features
      summary: Get evaluation status for all features in the context of an org
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/FeatureEvaluationStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/features/{featureId}:
    get:
      tags:
        - features
      summary: Get evaluation status of a feature in the context of an org
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureEvaluationStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - features
        - all-access
      summary: API will allow to patch a feature configuration for a given org.
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: features
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/featureIdParam'
        - $ref: '#/parameters/featureActionQueryParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureEvaluationStatus'
        '400':
          description: Invalid patch request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/orgs/{org}/features:
    get:
      tags:
        - features
      summary: Get complete details of all the features with their evaluation status in the context an org.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/SksFeatureDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/{org}/features/{featureId}:
    get:
      tags:
        - features
      summary: Get complete details of a feature with their evaluation status in the context an org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeatureDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/features:
    get:
      tags:
        - features
        - operator
      summary: List all Features
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: features
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/features/{featureId}:
    get:
      tags:
        - features
        - operator
      summary: Get a feature with given id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/featureIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - operator
        - features
      summary: Update a feature with given id
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: features
      parameters:
        - $ref: '#/parameters/featureIdParam'
        - in: body
          name: feature
          description: Feature to be updated
          required: true
          schema:
            $ref: '#/definitions/SksFeaturePatchRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SksFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
#
# AWS accounts controller
#
  /operator/aws:
    get:
      tags:
        - awsAccount
        - operator
      summary: List all Aws Accounts
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - awsAccount
        - operator
      summary: Adds a new AwsAccount to the pool
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - in: body
          name: awsAccountConfig
          description: AwsAccount to be created
          required: true
          schema:
            $ref: '#/definitions/AwsAccountConfig'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/create:
    post:
      tags:
        - awsAccount
        - operator
      summary: Creates and adds a new AwsAccount to the pool
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - in: body
          name: awsAccountCreationConfig
          description: AwsAccountConfiguration to be created
          required: true
          schema:
            $ref: '#/definitions/AwsAccountCreationConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/credentials:
    post:
      tags:
        - awsAccount
        - operator
      summary: Generates temporary credentials for a given org.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: orgId
          in: query
          description: Org Id to act upon
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccountResponseStructure'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/whitelist:
    post:
      tags:
        - awsAccount
        - operator
      summary: Creates a batch ticket to AWS
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/{awsAccountId}:
    get:
      tags:
        - awsAccount
        - operator
      summary: Get AwsAccount for an Id
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - awsAccount
        - operator
      summary: Delete AwsAccount
      description: |
        SUBJECT TO CHANGE/Internal
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: AwsAccount doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - awsAccount
        - operator
      summary: Update AwsAccount
      description: |
        SUBJECT TO CHANGE/Internal
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
        - in: body
          name: updateAwsAccountConfig
          description: Aws Account to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateAwsAccountConfig'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: AwsAccount does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - awsAccount
        - operator
      summary: Associate/Disassociate Aws Account to an org
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
        - name: action
          in: query
          description: |
            If = 'associate', Links to an org.
            If = 'disassociate' Removes link to an org.
          required: true
          type: string
        - name: orgId
          in: query
          description: Org Id to act upon
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/{awsAccountId}/regionazmapping:
    patch:
      tags:
        - awsAccount
        - operator
      summary: Patch the region az mappings
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
        - in: body
          name: UpdateAwsAccountNitroRegionAzMapping
          description: Mapping of the AWS Account
          required: true
          schema:
            $ref: '#/definitions/UpdateAwsAccountNitroRegionAzMapping'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: AwsAccount does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/{awsAccountId}/resume:
    post:
      tags:
        - awsAccount
        - operator
      summary: Resume Aws Account creation
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/awsAccountIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/aws/{awsAccountId}/state:
    post:
      tags:
        - awsAccount
        - operator
      summary: Resume Aws Account creation
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: "#/parameters/awsAccountIdParam"
        - name: state
          in: query
          description: AWS account state (ACTIVE, INACTIVE, DELETED)
          required: true
          type: string
        - name: reason
          in: query
          required: true
          description: Reason for updating the state
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/aws:
    get:
      tags:
        - awsAccount
      summary: Get shadow account info
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: aws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: "#/parameters/orgParam"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccountResponseStructure'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/orgs:
    get:
      tags:
        - orgs
        - operator
      summary: List all orgs
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: orgs
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/properties:
    get:
      tags:
        - orgs
        - operator
      summary: List all orgs properties
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: orgs
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/orgtype-options:
      get:
        tags:
          - orgs
          - operator
        summary: List all available orgtypes for orgs
        x-vmw-vapi-methodname: list
        x-vmc-ui-servicename: orgs
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                type: string
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /operator/orgs/orgtype-property:
      get:
        tags:
          - orgs
          - operator
        summary: value defined for a given orgtype and a given property
        x-vmw-vapi-methodname: get
        x-vmc-ui-servicename: orgs
        parameters:
          - $ref: '#/parameters/orgTypeParam'
          - $ref: '#/parameters/orgTypePropertyParam'
        responses:
          '200':
            description: OK
            schema:
              type: string
          '400':
            description: Bad request
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /operator/orgs/{org}:
    get:
      tags:
        - orgs
        - operator
      summary: List an org
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: orgs
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - orgs
        - operator
      summary: >-
        Take action against an org. This api can be used to disable/clean-up an
        org via operator.
      x-vmw-vapi-methodname: put
      x-vmc-ui-servicename: orgs
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: action
          in: query
          description: |
            If = 'disable', will disable the org. Resources are left intact.
            If = 'disable_and_clean', will disable the org and free-up resouces.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - orgs
        - operator
      summary: Delete organization
      description: |
        SUBJECT TO CHANGE/Internal
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: orgs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - operator
        - orgs
      summary: Update project
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: orgs
      parameters:
        - $ref: '#/parameters/orgParam'
        - in: body
          name: project
          description: Project to be updated
          required: true
          schema:
            $ref: '#/definitions/OrgPatchStructure'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Org does not exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/orgs/{org}/versions:
      get:
        tags:
          - orgs
          - operator
          - versions
        summary: List past versions of an org (in DESC order)
        x-vmw-vapi-methodname: getOrgVersions
        x-vmc-ui-servicename: orgs
        parameters:
          - $ref: '#/parameters/orgParam'
          - $ref: '#/parameters/versionsMaxParam'
          - $ref: '#/parameters/versionsStartParam'
          - $ref: '#/parameters/versionsEndParam'
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                $ref: '#/definitions/Organization'
          '400':
            description: Bad argument for query parameter(s)
            schema:
              $ref: '#/definitions/ErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Org does not exist
            schema:
              $ref: '#/definitions/ErrorResponse'
  /operator/orgs/{org}/properties/versions:
        get:
          tags:
            - orgs
            - operator
            - versions
          summary: List past versions of an org's Properties (in DESC order)
          x-vmw-vapi-methodname: getOrgPropertiesVersions
          x-vmc-ui-servicename: orgs
          parameters:
            - $ref: '#/parameters/orgParam'
            - $ref: '#/parameters/versionsMaxParam'
            - $ref: '#/parameters/versionsStartParam'
            - $ref: '#/parameters/versionsEndParam'
          responses:
            '200':
              description: OK
              schema:
                type: array
                items:
                  $ref: '#/definitions/OrgProperties'
            '400':
              description: Bad argument for query parameter(s)
              schema:
                $ref: '#/definitions/ErrorResponse'
            '401':
              description: Unauthorized
            '403':
              description: Forbidden
            '404':
              description: Org does not exist
              schema:
                $ref: '#/definitions/ErrorResponse'
  /operator/orgs/{org}/properties/{propertyName}:
    delete:
      tags:
        - orgs
        - operator
      summary: Delete org property
      description: |
        API to delete a property for a given org.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: orgs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/propertyNameParam'
        - name: force
          in: query
          description: Flag to force delete if validation of propertyname fails.
          required: false
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs:
    get:
      tags:
        - sddc
        - operator
      summary: List all the SDDCs of all the orgs
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Sddc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}:
    delete:
      tags:
        - sddc
        - operator
      summary: Delete SDDC
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: force
          in: query
          description: >
            If = 'true', will delete forcefully. Beware: do not use the force
            flag if there is a chance an active provisioning or deleting task is
            running against this SDDC.
          required: false
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for deletion
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - sddc
        - operator
      summary: Get SDDC
      description: Get SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sddc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/sddc-manifest:
    patch:
      tags:
        - sddc
        - operator
      summary: Trigger patch SDDC's SddcManifest
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: sddcManifest
          description: SddcManifest of the Sddc
          required: true
          schema:
            $ref: '#/definitions/SddcManifest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcManifest'
        '400':
          description: Bad APIRequest / Validation error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/sddc-manifest-latest:
    patch:
      tags:
        - sddc
        - operator
      summary: Trigger patch SDDC's latest Sddc Manifest
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: configName
          in: query
          description: >
            Config name in FM config service to locate Sddc manifest. If not provided, use the default one.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcManifest'
        '400':
          description: Bad APIRequest / Validation error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/sddc-manifest:
    patch:
      tags:
        - sddc
        - all-access
      summary: Trigger patch SDDC's SddcManifest
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: sddcManifest
          description: SddcManifest of the Sddc
          required: true
          schema:
            $ref: '#/definitions/SddcManifest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad APIRequest / Validation error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/mgw:
    post:
      tags:
        - sddc
        - operator
      summary: Enable management appliance connectivity from overlay network
      x-vmw-vapi-methodname: enableManagementApplianceConnectivity
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'enable-connectivity', will enable connectivity to management applaince network.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Bad APIRequest / Validation error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/sddc-manifest-latest:
    patch:
      tags:
        - sddc
        - all-access
      summary: Trigger patch SDDC's latest Sddc Manifest
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: configName
          in: query
          description: >
            Config name in FM config service to locate Sddc manifest. If not provided, use the default one.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcManifest'
        '400':
          description: Bad APIRequest / Validation error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/reconfigure-mgmt-cluster-reservation:
    post:
      tags:
        - sddc
        - all-access
      summary: Reconfigure Management Cluster resource pool and VM reservations
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid action, bad argument or SDDC state invalid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/versions:
    get:
      tags:
        - sddc
        - operator
      summary: List all past versions of a sddc (in desc order)
      x-vmw-vapi-methodname: listVersions
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/versionsMaxParam'
        - $ref: '#/parameters/versionsStartParam'
        - $ref: '#/parameters/versionsEndParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Sddc'
        '400':
          description: Bad argument for query parameter(s)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/resource-config:
    post:
      tags:
        - sddc
        - operator
      summary: Trigger actions to SDDC resourceConfig
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'upgrade', upgrade Sddc resourceConfig to current version
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for resourceConfig change
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/agent:
    post:
      tags:
        - sddc
        - operator
      summary: Trigger agent actions in SDDC
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'reboot', will reboot the agent.
            If = 'stop', will stop/power off the agent VM.
            If = 'start', will start/power on the agent VM.
            If = 'restart', will stop+start the agent VM.
            If = 'redeploy', will redeploy the agent.
            If = 'auto-remediate', will execute the agent remediation cycle.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for redeploy
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - sddc
        - operator
      summary: Trigger config actions on agent in SDDC
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'rotate_login_secret' will change the login secret of the agent.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for config action
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/agent:
    post:
      tags:
        - sddc
        - all-access
      summary: Trigger agent actions in SDDC
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'reboot', will reboot the agent.
            If = 'stop', will stop/power off the agent VM.
            If = 'start', will start/power on the agent VM.
            If = 'restart', will stop+start the agent VM.
            If = 'redeploy', will redeploy the agent.
            If = 'auto-remediate', will execute the agent remediation cycle.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for redeploy
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - sddc
        - all-access
      summary: Trigger config actions on agent in SDDC
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'rotate_login_secret' will change the login secret of the agent.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for config action
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/agent/login-token:
    get:
      tags:
        - sddc
        - operator
      summary: Get agent login token for PoP authentication.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
              description: The login token.
              type: string
        '404':
          description: The agent is either not existing or not in a state can generate the login token.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/agent/services:
    post:
      tags:
        - sddc
        - operator
      summary: Trigger actions on tenant services in the POP in SDDC
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: PopServiceLifeCycleSpecV1
          description: LifeCycle Spec to manage the tenant Services on Pop
          required: true
          schema:
            $ref: '#/definitions/PopServiceLifeCycleSpecV1'
        - name: action
          in: query
          description: |
            If = 'update', will update the tenant service mentioned in the spec body.
            If = 'enable', will enable the tenant service mentioned in the spec body.
            If = 'disable', will disable the tenant service mentioned in the spec body.
            If = 'start', will start the tenant service mentioned in the spec body.
            If = 'restart', will restart the tenant service mentioned in the spec body.
            If = 'stop', will stop the tenant service mentioned in the spec body.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for performing tenant service api.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/agent/auth-token:
    get:
      tags:
        - sddc
        - operator
      summary: Get agent auth token for PoP authentication.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
              description: The agent authentication information.
              $ref: '#/definitions/AgentAuthInfo'
        '404':
          description: The agent is either not existing or not in a state can generate the auth token.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/esxs/{esx}:
    post:
      tags:
        - sddc
        - operator
      summary: Restart an esx host in sddc
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: esxs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/esxParam'
        - name: action
          in: query
          description: |
            If = 'force-restart', will force restart the ESX host through AWS.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC or ESX with the given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/sddc-spec:
    get:
      tags:
        - sddc
        - operator
      summary: Get the glcm sddc spec for a sddc
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcSpec'
        '400':
          description: The sddc is not in a state that's valid for glcm brinup
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/sddc-spec:
    get:
      tags:
        - sddc
        - all-access
      summary: Get the glcm sddc spec for a sddc
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcSpec'
        '400':
          description: The sddc is not in a state that's valid for glcm brinup
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/provisioning-specs:
    get:
      tags:
        - sddc
      summary: List all sddc type provisioning spec which are applicable for an org.
      description: List all sddc type provisioning spec which are applicable for an org.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcProvisioningSpec'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            Internal server error.
            Either sddcTypes stored in fm config service is having wrong data or config service not available.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/sddc-capabilities:
    get:
      tags:
        - sddc
        - all-access
      summary: List the sddc capabilities along with the sddc types for an org
      description: List all sddc type provisioning spec which are applicable for an org.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcCapability'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            Internal server error.
            Either sddcTypes stored in fm config service is having wrong data or config service not available.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/push-dvs-property:
    post:
      tags:
        - sddc
        - operator
      summary: Push Dvs Propert in VC.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: dvsProperty
          description: Push Dvs Property
          required: true
          schema:
            $ref: '#/definitions/DvsProperty'
      responses:
        '202':
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/Task'
        '400':
          description: Cannot Push Property to Dvs
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Invalid VC Credentials
          schema:
            $ref: '#/definitions/ErrorResponse'
#
# Node Controller
#
  /operator/nodes/local:
    get:
      tags:
        - nodes
        - operator
      summary: Get information about a single node.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: nodes
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - nodes
        - operator
      summary: Operations on a single node.
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: nodes
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: action
          in: query
          description: |
            If = 'quiesce', will start process of quiescing node. The actual state of quiescing can take a long
            time, and must be polled using the 'GET' operation. Additionally, prior to calling the quiesce POST,
            it is advised to stop all new inbound requests. Note that in the case of tasks, quiesce doesn't wait for
            all tasks to complete - just for them to finish executing on the target node. Task implementations can
            delay quiescing an arbitrary amount if they choose to do local polling (which isn't good).
          required: true
          type: string
      responses:
        '202':
          description: ACCEPTED
        '400':
          description: Invalid Operation
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
#
# ConfigController
#
  /orgs/{org}/config:
    get:
      tags:
        - config
      summary: Get configuration information.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: config
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/config:
    get:
      tags:
        - config
        - operator
      summary: Get configuration information.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: config
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - config
        - operator
      summary: Perform configuration changes.
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: config
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: action
          in: query
          description: |
            If = 'flush_auth_token' then token to be flushed should be in FlushAuthTokenRequest
          required: true
          type: string
        - in: body
          name: ConfigRequest
          description: Configuration request data.
          required: true
          schema:
            $ref: '#/definitions/ConfigRequest'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

#
# Notification Controller
#
  /operator/notifications:
    get:
      tags:
        - notifications
        - operator
      summary: List of all the registered clients
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: notifications
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/N10n'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/notifications/{clientId}:
    get:
      tags:
        - notifications
        - operator
      summary: Get notification details for client id
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: notifications
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: clientId
          in: path
          description: Unique client id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/N10n'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - notifications
        - operator
      summary: Adds or updates notification setting for a client id
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: notifications
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: clientId
          in: path
          description: Unique client id
          required: true
          type: string
        - in: body
          name: NotificationRequest
          description: Notifications details
          required: true
          schema:
            $ref: '#/definitions/N10nRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/N10n'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - notifications
        - operator
      summary: Disable notifications for client id
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: notifications
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: clientId
          in: path
          description: Unique client id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/notifications/event/types:
    get:
      tags:
        - notifications
        - operator
      summary: List of all the supported events
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: notifications
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
#
# Jobs Controller
#
  /operator/jobs:
    get:
      tags:
        - operator
      summary: Get list of scheduled jobs
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: jobs
      x-vmw-vapi-lifecyle-internal:
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/JobResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /operator/jobs/{jobName}:
    post:
      tags:
        - operator
      summary: Pauses or un-pauses a job
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: jobs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: jobName
          in: path
          description: Job name
          required: true
          type: string
        - name: action
          in: query
          description: |
            If = 'pause' then job will be paused (and not fire again)
            If = 'unpause' then job will be unpaused and resume normal schedule
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - operator
      summary: Delete a scheduled job
      description: |
        Note that on-restart of the service initialization code might well recreate the job.
        This API should only be used to remove no longer needed jobs where the code has already been removed.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: jobs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - name: jobName
          in: path
          description: Job name
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

#
# Task Controller
#
  /operator/tasks:
    get:
      tags:
        - task
        - operator
      summary: List all tasks for all organizations with optional filtering
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /operator/tasks/types/{taskType}/features:
    get:
      tags:
        - task
      summary: List all features registered with a task
      description: |
        List all features registered with a task.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: tasks
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/taskTypeParam'
      responses:
        '200':
          description: List of feature names
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/tasks/{task}:
    get:
      tags:
        - task
        - operator
      summary: Retrieve a task by Id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/taskParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - task
        - operator
      summary: Operate on a task
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/taskParam'
        - name: action
          in: query
          description: |
            If = 'restart', failed task will be restarted.
            If = 'fail', Fails the non terminal task.
            If = 'cancel' cancel the task.
          required: true
          type: string
        - name: sub_status
          in: query
          description: |
            If action=restart then start at this sub_status.
            If action=cancel or fail then the field value is irrelevant.
          required: false
          type: string
        - name: reason
          in: query
          description: |
            If action=fail then this is mandatory info for failing the task.
            If action=cancel or restart then the field value is irrelevant.
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid action or bad argument
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/tasks/{task}/versions:
    get:
      tags:
        - task
        - operator
      summary: List all past versions of a task (in desc order)
      x-vmw-vapi-methodname: listVersions
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/taskParam'
        - $ref: '#/parameters/versionsMaxParam'
        - $ref: '#/parameters/versionsStartParam'
        - $ref: '#/parameters/versionsEndParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '400':
          description: Bad argument for query parameter(s)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - task
        - operator
      summary: Delete past versions of a task
      description: |
        Delete all versions older than supplied version.
        The task will never be completely deleted regardless of what version is passed in.
      x-vmw-vapi-methodname: deleteVersions
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/taskParam'
        - name: version
          in: query
          description: All versions older than this will be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '400':
          description: Bad argument for query parameter(s)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/tasks/summary:
    get:
      tags:
        - task
        - operator
      summary: Get a summary of all tasks matching criteria
      x-vmw-vapi-methodname: listSummaries
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EntitySummary'
        '400':
          description: Bad argument for query parameter(s)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/tasks:
    get:
      tags:
        - task
      summary: List all tasks for organization
      description: |
        List all tasks with optional filtering.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/tasks/types:
    get:
      tags:
        - task
      summary: List all tasks types
      description: |
        List all tasks types.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: tasks
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/tasks/{task}:
    get:
      tags:
        - task
      summary: Get task details
      description: |
        Retrieve details of a task.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/taskParam'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - task
      summary: Modify an existing task
      description: |
        Request that a running task be canceled.
        This is advisory only, some tasks may not be cancelable, and some tasks might take
        an arbitrary amount of time to respond to a cancelation request. The task must be monitored
        to determine subsequent status.
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: tasks
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/taskParam'
        - name: action
          in: query
          description: 'If = ''cancel'', task will be canceled'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid action or bad argument
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the task with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
#
# Org/Project Controller
#
  /orgs:
    get:
      tags:
        - orgs
      summary: Get organizations associated with calling user.
      description: |
        Return a list of all organizations the calling user (based on credential) is authorized on.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: orgs
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}:
    get:
      tags:
        - orgs
      summary: Get details of organization
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: orgs
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/providers:
    get:
      tags:
        - orgs
      summary: Get enabled cloud providers for an organization
      description: ''
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: providers
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CloudProvider'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'

#
# Sddc Controller
#
  /orgs/{org}/sddcs:
    get:
      tags:
        - sddc
      summary: List all the SDDCs of an organization
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: sddcs
      description: List all the SDDCs of an organization
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Sddc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - sddc
      summary: Provision SDDC
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: sddcs
      description: Provision an SDDC in target cloud
      parameters:
        - $ref: '#/parameters/orgParam'
        - in: body
          name: sddcConfig
          description: sddcConfig
          required: true
          schema:
            $ref: '#/definitions/SddcConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}:
    get:
      tags:
        - sddc
      summary: Get SDDC
      description: Get SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sddc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc
      summary: Delete SDDC
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: retain_configuration
          in: query
          description: >
            If = 'true', the SDDC's configuration is retained as a template for later use.
            This flag is applicable only to SDDCs in ACTIVE state.
          required: false
          type: boolean
        - name: template_name
          in: query
          description: >
            Only applicable when retainConfiguration is also set to 'true'.
            When set, this value will be used as the name of the SDDC configuration template generated.
          required: false
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for deletion
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/publicips:
    get:
      tags:
        - sddc
        - publicip
      summary: List all public IPs for a SDDC
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: publicips
      description: list all public IPs for a SDDC
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - sddc
        - publicip
      summary: Allocate public IPs for a SDDC
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: publicips
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: spec
          description: allocation spec
          required: true
          schema:
            $ref: '#/definitions/SddcAllocatePublicIpSpec'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/publicips:
    get:
      tags:
        - sddc
        - operator
        - publicip
      summary: List all public IPs for a SDDC
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: publicips-operator
      description: list all public IPs for a SDDC
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - sddc
        - operator
        - publicip
      summary: Allocate public IPs for a SDDC
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: publicips-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: spec
          description: allocation spec
          required: true
          schema:
            $ref: '#/definitions/SddcAllocatePublicIpSpec'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/publicips/{id}:
    get:
      tags:
        - sddc
        - publicip
      summary: Get one public IP for a SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: publicips
      description: Get one public IP for a SDDC
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc
        - publicip
      summary: Free one public IP for a SDDC
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: publicips
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - sddc
        - publicip
      summary: Attach or detach a public IP to workload VM for a SDDC
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: publicips
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
        - name: action
          in: query
          description: >
            Type of action as 'attach', 'detach', 'reattach', or 'rename'.

            For 'attch', the public IP must not be attached and
            'associated_private_ip'

            in the payload needs to be set with a workload VM private IP.

            For 'detach', the public IP must be attached and
            'associated_private_ip'

            in the payload should not be set with any value.

            For 'reattach', the public IP must be attached and
            'associated_private_ip'

            in the payload needs to be set with a new workload VM private IP.

            For 'rename', the 'name' in the payload needs to have a new name
            string.
          type: string
          required: true
        - in: body
          name: SddcPublicIp object
          description: SddcPublicIp object to update
          required: true
          schema:
            $ref: '#/definitions/SddcPublicIp'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/publicips/{id}:
    get:
      tags:
        - sddc
        - operator
        - publicip
      summary: Get one public IP for a SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: publicips-operator
      description: Get one public IP for a SDDC
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc
        - operator
        - publicip
      summary: Free one public IP for a SDDC
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: publicips-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - sddc
        - operator
        - publicip
      summary: Attach or detach a public IP to workload VM for a SDDC
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: publicips-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
        - name: action
          in: query
          description: >
            Type of action as 'attach', 'detach', 'reattach', or 'rename'.

            For 'attch', the public IP must not be attached and
            'associated_private_ip'

            in the payload needs to be set with a workload VM private IP.

            For 'detach', the public IP must be attached and
            'associated_private_ip'

            in the payload should not be set with any value.

            For 'reattach', the public IP must be attached and
            'associated_private_ip'

            in the payload needs to be set with a new workload VM private IP.

            For 'rename', the 'name' in the payload needs to have a new name
            string.
          type: string
          required: true
        - in: body
          name: SddcPublicIp object
          description: SddcPublicIp object to update
          required: true
          schema:
            $ref: '#/definitions/SddcPublicIp'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/mgw/publicips:
    get:
      tags:
        - sddc
        - operator
        - publicip
      summary: List all public IPs for the mgw of a SDDC
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: mgw-publicips-operator
      description: list all public IPs for the mgw of a SDDC
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - sddc
        - operator
        - publicip
      summary: Allocate public IPs for the mgw of a SDDC
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: mgw-publicips-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: spec
          description: allocation spec and only need to provide value for its count attribute.
          required: true
          schema:
            $ref: '#/definitions/SddcAllocatePublicIpSpec'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/mgw/publicips/{id}:
    get:
      tags:
        - sddc
        - operator
        - publicip
      summary: Get one public IP for the mgw of a SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: mgw-publicips-operator
      description: Get one public IP for the mgw of a SDDC
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc
        - operator
        - publicip
      summary: Free one public IP for the mgw of a SDDC
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: mgw-publicips-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/mgw/publicips:
    get:
      tags:
        - sddc
        - publicip
      summary: List all public IPs for the mgw of a SDDC
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: mgw-publicips
      description: list all public IPs for the mgw of a SDDC
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/mgw/publicips/{id}:
    get:
      tags:
        - sddc
        - publicip
      summary: Get one public IP for the mgw of a SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: mgw-publicips
      description: Get one public IP for a SDDC
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/ipParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcPublicIp'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/dns/public:
    put:
      tags:
        - sddc
        - dns
      summary: Update the DNS records of management VMs to use public IP addresses
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: dns-public
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/dns/private:
    put:
      tags:
        - sddc
        - dns
      summary: Update the DNS records of management VMs to use private IP addresses
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: dns-private
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/management-vms:
    post:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Add a management VM to Sddc
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: managementVmConfig
          description: the management VM configuration
          required: true
          schema:
            $ref: '#/definitions/ManagementVmConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/management-vms/{managementVmId}:
    patch:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Update a management VM in Sddc
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/managementVmIdParam'
        - in: body
          name: managementVmConfig
          description: the management VM configuration
          required: true
          schema:
            $ref: '#/definitions/ManagementVmConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Delete the management VM in Sddc
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: management-vms
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/managementVmIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/management-vms/{managementVmId}/certificate:
    post:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: APIRequest a CA signed certificate for the management VM in Sddc
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/managementVmIdParam'
        - in: query
          name: validDays
          description: The number of days the certificate should be valid (between 90 to 365 days). Default is 365 days.
          required: false
          type: integer
        - in: body
          name: csr
          description: the certificate signing request
          required: true
          schema:
            $ref: '#/definitions/ManagementVmCsrParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    get:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Get the CA signed certificate chain for the management VM in Sddc
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/managementVmIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManagementVmCertificate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the public IP with given IP address
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Delete the CA signed certificate for the management VM in Sddc
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/managementVmIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/reverse-proxy:
    post:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Add a reverse proxy endpoint to Sddc
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: manage-reverse-proxy
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: reverseProxyEpConfig
          description: the configuration of a reverse proxy endpoint
          required: true
          schema:
            $ref: '#/definitions/ReverseProxyEpConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    get:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: List all active add-on reverse proxy endpoints in Sddc
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: manage-reverse-proxy
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/ReverseProxyEpConfig'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/reverse-proxy/{serverType}/{endpoint}:
    delete:
      tags:
        - sddc
        - impersonation
        - all-access
      summary: Remove a reverse proxy endpoint from Sddc
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: manage-reverse-proxy
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/reverseProxyServerTypeParam'
        - $ref: '#/parameters/reverseProxyEpParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/upgradesddc:
    post:
      tags:
        - operator
      summary: Update the SDDC
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddc-upgrade
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: sddcUpgradeEventRequestParam
          in: body
          description: sddcUpgradeEventRequestParam
          required: true
          schema:
            $ref: '#/definitions/SddcUpgradeEventRequest'
        - name: notify
          in: query
          description: Notify Fleet Management.
          required: false
          type: boolean
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Could not upgrade SDDC.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/certificate/{entity}:
    post:
      tags:
        - sddc
        - operator
      summary: Update the certificates in SDDC
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: entity
          in: path
          description: |
            If = 'pop', will update the certificate for PoP.
            If = 'vcenter', will update the certificate for vCenter.
          required: true
          type: string
        - name: validDays
          in: query
          description: The number of days the certificate should be valid (between 90 to 365 days). Default is 365 days.
          required: false
          type: integer
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for certificate update
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

  /operator/sddcs/{sddc}/password/{entity}:
    put:
      tags:
        - sddc
        - operator
      summary: Update the SDDC resource password for admin or root users.
      x-vmw-vapi-methodname: put
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: entity
          in: path
          description: |
            If = 'vcenter', will update the admin sso and root ssh password for vcenter.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for password update
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/expiration-date/{noOfDaysToExtend}:
      put:
        tags:
          - sddc
          - operator
        summary: Update the SDDC expiration date.
        x-vmw-vapi-methodname: put
        x-vmc-ui-servicename: sddcs
        parameters:
          - $ref: '#/parameters/sddcParam'
          - name: noOfDaysToExtend
            in: path
            description: The number of days to extend.
            required: true
            type: integer
        responses:
          '202':
            description: OK
            schema:
              $ref: '#/definitions/Sddc'
          '400':
            description: The expiration date is invalid or it is not a 1 Node SDDC.
            schema:
              $ref: '#/definitions/ErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
            schema:
              $ref: '#/definitions/ErrorResponse'
          '404':
            description: Cannot find the SDDC with given identifier
            schema:
              $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws:
    get:
      tags:
        - network
      summary: Get compute gateways
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: cgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ComputeGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
      summary: Add compute gateway
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: cgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: cgw_name
          in: query
          description: cgw name
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The CGW cannot be created.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/cgws:
    get:
      tags:
        - network
        - operator
      summary: Get compute gateways
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: cgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ComputeGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
        - operator
      summary: Add CGW
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: cgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: cgw_name
          in: query
          description: cgw name
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The CGW cannot be created.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}:
    get:
      tags:
        - network
      summary: Get a compute gateway by id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: cgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ComputeGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a compute gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/cgws/{gateway}:
    get:
      tags:
        - network
        - operator
      summary: Get a compute gateway by id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: cgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ComputeGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a compute gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/sddcs/{sddc}/convert:
    post:
      tags:
        - sddc
        - convert
      summary: Converts a one host SDDC to a four node DEFAULT SDDC.
      description: This API converts a one host SDDC to a four node DEFAULT SDDC. It takes care of configuring and upgrading the vCenter configurations on the SDDC for high availability and data redundancy.
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: sddcs
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/ErrorResponse'

  /operator/usage/jobs:
    get:
      tags:
        - usage
        - operator
      summary: List all the usage jobs with optional filtering
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: usage-jobs-operator
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UsageJob'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - usage
        - operator
      summary: Create a usage metering job to send usage to billing system.
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: usage-jobs-operator
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - in: body
          name: usageJobRequest
          description: |
            If usageJobRequest is not null and S3 manifest file has been specified via s3_manifest_file attribute,
            the usage metering job will run against specified S3 manifest file defined in s3_manifest_file attribute.
            Otherwise, the usage metering job will run against the default S3 manifest file associated with
            payeraccount.
          required: false
          schema:
            $ref: '#/definitions/UsageJobRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid Operation
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/usage/jobs/{job}:
    get:
      tags:
        - usage
        - operator
      summary: Get usage job
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: usage-jobs-operator
      parameters:
        - $ref: '#/parameters/jobParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UsageJob'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the usage job with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/usage/jobs/{job}/batches:
    get:
      tags:
        - usage
        - operator
      summary: List all usage job batches of a given job identifier
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: usage-batches-operator
      parameters:
        - $ref: '#/parameters/jobParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UsageJobBatch'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/usage/jobs/{job}/batches/{batch}:
    get:
      tags:
        - usage
        - operator
      summary: Get usage job batch
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: usage-batches-operator
      parameters:
        - $ref: '#/parameters/jobParam'
        - $ref: '#/parameters/batchParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UsageJobBatch'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the usage job batch with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/billing/search:
    post:
      tags:
        - usage
        - operator
      summary: Create a search request for information required by usage micro-service.
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: usage-ms-search
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - in: body
          name: usageSearchRequest
          description: describes what to search for.
          required: true
          schema:
            $ref: '#/definitions/UsageSearchRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UsageSearchResponse'
        '400':
          description: Bad APIRequest - malformed search request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/usage/jobs/{job}/report:
      post:
        tags:
          - usage
          - operator
        summary: Create a usage anayltics request to generate reports.
        x-vmw-vapi-methodname: create
        x-vmc-ui-servicename: usage-report-operator
        x-vmw-vapi-lifecyle-internal:
        parameters:
              - $ref: '#/parameters/jobParam'
        responses:
          '202':
            description: Accepted
          '400':
            description: Bad APIRequest
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /orgs/{org}/account-link:
    get:
      tags:
        - account-linking
      summary: Gets a link that can be used on a customer's account to start the linking process.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: accounts
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
  /orgs/{org}/account-link/customer-aws-account:
    get:
      tags:
        - account-linking
      summary: Gets customer's account which is linked to the given org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: customer-account
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsCustomerLinkedAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - account-linking
      summary: Delete's a customer's linked account information
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: customer-account
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsCustomerLinkedAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/network-link-ready:
    get:
      tags:
        - account-linking
      summary: Gets the status of the V2 account linking process.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: customer-account
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsAccountLinkStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/compatible-subnets:
    get:
      tags:
        - account-linking
      summary: Gets a customer's compatible subnets for account linking
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: compatible-subnets
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/linkedAccountIdParam'
        - $ref: '#/parameters/regionParam'
        - $ref: '#/parameters/sddcOptionalRequestParam'
        - $ref: '#/parameters/forceRefreshParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsCompatibleSubnets'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - account-linking
      summary: Sets which subnet to use to link accounts and finishes the linking process
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: compatible-subnets
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsSubnet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/compatible-subnets-async:
    get:
      tags:
        - account-linking
      summary: Gets a customer's compatible subnets for account linking via a task. The information is returned as a member of the task (found in task.params['subnet_list_result'] when you are notified it is complete), and it's documented under ref /definitions/AwsCompatibleSubnets
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: compatible-subnets-async
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/linkedAccountIdParam'
        - $ref: '#/parameters/regionParam'
        - $ref: '#/parameters/sddcOptionalRequestParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - account-linking
      summary: Sets which subnet to use to link accounts and finishes the linking process via a task
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: compatible-subnets-async
      parameters:
        - in: body
          name: aws_subnet
          description: The subnet chosen by the customer
          required: true
          schema:
            $ref: '#/definitions/AwsSubnet'
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/connected-accounts:
    get:
      tags:
        - account-linking
      summary: Get a list of connected accounts
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: connected-accounts
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsCustomerConnectedAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/connected-accounts/{linkedAccountPathId}:
    delete:
      tags:
        - account-linking
      summary: Delete a particular connected (linked) account.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: connected-accounts
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/linkedAccountIdPathParam'
        - $ref: '#/parameters/forceEvenWhenSddcPresentParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsCustomerConnectedAccount'
        '400':
          description: An invalid connected account ID was specified, or the connection still has SDDCs active on it.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/map-customer-zones:
    post:
      tags:
        - account-linking
      summary: Creates a task to re-map customer's datacenters across zones.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: customer-zone-mapping
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: mapZonesRequest
          in: body
          description: The zones request information about who to map and what to map.
          required: true
          schema:
            $ref: '#/definitions/MapZonesRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/connected-accounts/{linkedAccountPathId}:
    delete:
      tags:
        - account-linking
      summary: Delete a particular connected account
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: connected-accounts-operator
      parameters:
        - $ref: '#/parameters/orgQueryParam'
        - $ref: '#/parameters/linkedAccountIdPathParam'
        - $ref: '#/parameters/forceDeleteParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsCustomerConnectedAccount'
        '400':
          description: An invalid connected account ID was specified, or the connection still has SDDCs active on it.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddc-connections/{sddcConnectionId}:
    patch:
      tags:
        - account-linking
        - operator
      summary: update SDDC connection.
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: sddc-connection
      parameters:
        - $ref: '#/parameters/sddcConnectionIdPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AwsSddcConnection'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/sddc-connections:
    get:
      tags:
        - account-linking
      summary: Get a list of SDDC connections currently setup for the customer's organization.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddc-connection
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcOptionalRequestParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsSddcConnection'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/map-customer-zones/:
    post:
      tags:
        - account-linking
      summary: Re-map the zones in the regions given for a customer's account. Used to expand to new zones and avoid re-linking customer accounts.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: account-linking-zone-mapping
      parameters:
        - name: mapZonesRequest
          in: body
          description: The zones request information about who to map and what to map.
          required: true
          schema:
            $ref: '#/definitions/MapZonesRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MapZonesResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/account-link/xvpc-links:
    post:
      tags:
        - account-linking
      summary: Operator api to enable account linking for a sddc, this will create the enis, associate the enis and the routes.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: xvpc-links
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: sddcConfig
          description: sddcConfig
          required: true
          schema:
            $ref: '#/definitions/SddcConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/account-link/xvpc-links:
    post:
      tags:
        - account-linking
      summary: Enables account linking for a sddc, this will create the enis, associate the enis and the routes.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: xvpc-links
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: sddcConfig
          description: sddcConfig
          required: true
          schema:
            $ref: '#/definitions/SddcConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/sddc-connections:
    get:
      tags:
        - sddc-connections
        - operator
      summary: Generates a list of SDDC connections.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: account-linking-sddc-connections
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsSddcConnection'
        '400':
          description: The request was not valid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/{org}/sddc-connections:
    get:
      tags:
        - sddc-connections
        - operator
      summary: Generates a list of SDDC connections for the org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: account-linking-sddc-connections
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/findOrphanParam'
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsSddcConnection'
        '400':
          description: The request was not valid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - sddc-connections
        - operator
      summary: Deletes SDDC connections in a given org.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: account-linking-sddc-connections
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: connection request
          in: body
          description: SDDC connection delete request
          required: true
          schema:
            $ref: '#/definitions/SddcConnectionDeleteRequest'
      responses:
        '200':
          description: A list of all SDDC connections successfully deleted.
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsSddcConnection'
        '400':
          description: The request was not valid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/orgs/{org}/sddc-connections/orphans:
    get:
      tags:
        - sddc-connections
        - operator
      summary: Generates a list of SDDC connections that are considered orphans.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: account-linking-sddc-connections
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/findOrphanParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsSddcConnection'
        '400':
          description: The request was not valid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/connected-services/available:
    get:
      tags:
        - orgs
      summary: Grabs information about available connnected services for a given org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: connected-services
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServicesAvailableResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/account-link/connected-services/sddcs/{sddc}/{serviceId}:
    get:
      tags:
        - orgs
      summary: Gets the status of a connected service.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: connected-services
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/serviceParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectedServiceStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - orgs
      summary: Turns on a connected service.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: connected-services
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/serviceParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectedServiceStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - orgs
      summary: Turns off a connected service.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: connected-services
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/serviceParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectedServiceStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - orgs
      summary: Reconfigures an existing connected service
      x-vmw-vapi-methodname: patch
      x-vmc-ui-servicename: connected-services
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/serviceParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectedServiceStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/xvpc-zone:
    post:
      tags:
        - account-linking
        - multi-az
      summary: Notify the backend of a change to the CGW's current zone.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: account-linking-cgw-zone
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: zoneChangeRequest
          description: The request for changing things around which zone the CGW is in.
          required: true
          schema:
            $ref: '#/definitions/ZoneChangeRequest'
      responses:
        '200':
          description: OK, returns zone connection information.
          schema:
            $ref: '#/definitions/AwsSddcConnection'
        '403':
          description: Forbidden
    get:
      tags:
        - account-linking
        - multi-az
      description: Get the current connection (and zone) that the system believes the CGW is on.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: account-linking-cgw-zone
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK, returns current connection information.
          schema:
            $ref: '#/definitions/AwsSddcConnection'
        '403':
          description: Forbidden
  /operator/orgs/{org}/sddcs/{sddc}/xvpc-zone:
    post:
      tags:
        - account-linking
        - multi-az
      summary: Notify the backend of a change to the CGW's current zone.
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: account-linking-cgw-zone
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: zoneChangeRequest
          description: The request for changing things around which zone the CGW is in.
          required: true
          schema:
            $ref: '#/definitions/ZoneChangeRequest'
      responses:
        '200':
          description: OK, returns zone connection information.
          schema:
            $ref: '#/definitions/AwsSddcConnection'
        '403':
          description: Forbidden
    get:
      tags:
        - account-linking
        - multi-az
      description: Get the current connection (and zone) that the system believes the CGW is on.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: account-linking-cgw-zone
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK, returns current connection information.
          schema:
            $ref: '#/definitions/AwsSddcConnection'
        '403':
          description: Forbidden
  /callbacks/publics/account-link/status-update/{org}:
    post:
      tags:
        - account-linking
      summary: Post an update on the account linking process.
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: accounts
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
  # it's really public - but vapi IDL is broken right now and thinks 'public' is a reserved word.
  /callbacks/publics/account-link/template/{org}/{tokenId}/{tokenContent}:
    get:
      tags:
        - account-linking
      summary: Retrieve the template needed to link a customer's account.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: accounts
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/tokenIdParam'
        - $ref: '#/parameters/tokenContentParam'
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/mgws:
    get:
      tags:
        - network
      summary: Get management gateways
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: mgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagementGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/mgws:
    get:
      tags:
        - network
        - operator
      summary: Get management gateways
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: mgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagementGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/mgws/{gateway}:
    get:
      tags:
        - network
      summary: Get a management gateway by id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: mgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManagementGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a management gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - network
      summary: Reset management gateway
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: mgws
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: action
          in: query
          description: 'If = ''reset'', MGW will be reset to default configuration.'
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/mgws/{gateway}:
    get:
      tags:
        - network
        - operator
      summary: Get a management gateway by id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: mgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManagementGateway'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a management gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - network
        - operator
      summary: Reset management gateway
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: mgws-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: action
          in: query
          description: 'If = ''reset'', MGW will be reset to default configuration.'
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/dns-servers:
    put:
      tags:
        - network
      summary: Add or replace DNS servers for a gateway
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: dns-servers
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: dns_servers
          in: body
          description: DNS servers
          required: true
          schema:
            $ref: '#/definitions/DnsServers'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/dns-servers:
    put:
      tags:
        - network
        - operator
      summary: Add or replace DNS servers for a gateway
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: dns-servers-operator
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: dns_servers
          in: body
          description: DNS servers
          required: true
          schema:
            $ref: '#/definitions/DnsServers'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates or invalid body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/mgws/{gateway}/default-firewall-rules:
    get:
      tags:
        - network
      summary: Returns a collection of default firewall rules.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: default-firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FirewallRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/firewall-rules-collection:
    post:
      tags:
        - network
      summary: Adds a collection of firewall rules
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: rule
          in: body
          description: firewall rules to add
          required: true
          schema:
            type: array
            items:
              type: object
        - name: above_rule_id
          in: query
          description: add a new firewall rule above the specified rule id
          type: string
          required: false
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/firewall-rules:
    get:
      tags:
        - network
      summary: Get firewall rules
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FirewallRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - network
      summary: Add a firewall rule either below existing rules or above a specified rule id
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: above_rule_id
          in: query
          description: add a new rule above the specified rule id
          type: string
          required: false
        - name: rule
          in: body
          description: firewall rule to add
          required: true
          schema:
            $ref: '#/definitions/FirewallRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
      summary: Reorder firewall rules - move rule with rule_id above rule with above_rule_id
      x-vmw-vapi-methodname: move
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: rule_id
          in: query
          description: id of the firewall rule to move
          type: string
          required: true
        - name: above_rule_id
          in: query
          description: above which rule the rule specified by rule_id body parameter should be moved
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find sddc or gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/firewall-rules:
    get:
      tags:
        - network
        - operator
      summary: Get firewall rules
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FirewallRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - network
        - operator
      summary: Add a firewall rule either below existing rules or above a specified rule id
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: above_rule_id
          in: query
          description: add a new rule above the specified rule id
          type: string
          required: false
        - name: rule
          in: body
          description: firewall rule to add
          required: true
          schema:
            $ref: '#/definitions/FirewallRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
        - operator
      summary: Reorder firewall rules - move rule with rule_id above rule with above_rule_id
      x-vmw-vapi-methodname: move
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: rule_id
          in: query
          description: id of the firewall rule to move
          type: string
          required: true
        - name: above_rule_id
          in: query
          description: above which rule the rule specified by rule_id body parameter should be moved
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find sddc or gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/firewall-rules/{rule}:
    get:
      tags:
        - network
      summary: Get a firewall rule
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FirewallRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
      summary: Edit a firewall rule
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
        - name: rule
          in: body
          description: firewall rule
          required: true
          schema:
            $ref: '#/definitions/FirewallRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
      summary: Delete a firewall rule
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: firewall-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/firewall-rules/{rule}:
    get:
      tags:
        - network
        - operator
      summary: Get a firewall rule
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FirewallRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
        - operator
      summary: Edit a firewall rule
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
        - name: rule
          in: body
          description: firewall rule
          required: true
          schema:
            $ref: '#/definitions/FirewallRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
        - operator
      summary: Delete a firewall rule
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: firewall-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find firewall with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}/nat-rules:
    get:
      tags:
        - network
      summary: Get NAT rules
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NatRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
      summary: Add a NAT rule either to the bottom of the NAT rules table or above the specified rule id
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: above_rule_id
          in: query
          description: add a new NAT rule above the specified rule id
          type: string
          required: false
        - name: rule
          in: body
          description: NAT rule
          required: true
          schema:
            $ref: '#/definitions/NatRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - network
      summary: Reorder NAT rules - move rule with rule_id above rule with above_rule_id
      x-vmw-vapi-methodname: move
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: rule_id
          in: query
          description: id of the NAT rule to move
          type: string
          required: true
        - name: above_rule_id
          in: query
          description: above which rule the rule specified by rule_id body parameter should be moved
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find sddc or gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/cgws/{gateway}/nat-rules:
    get:
      tags:
        - network
        - operator
      summary: Get NAT rules
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NatRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
        - operator
      summary: Add a NAT rule either to the bottom of the NAT rules table or above the specified rule id
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: above_rule_id
          in: query
          description: add a new NAT rule above the specified rule id
          type: string
          required: false
        - name: rule
          in: body
          description: NAT rule
          required: true
          schema:
            $ref: '#/definitions/NatRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - network
        - operator
      summary: Reorder NAT rules - move rule with rule_id above rule with above_rule_id
      x-vmw-vapi-methodname: move
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: rule_id
          in: query
          description: id of the NAT rule to move
          type: string
          required: true
        - name: above_rule_id
          in: query
          description: above which rule the rule specified by rule_id body parameter should be moved
          type: string
          required: true
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find sddc or gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}/nat-rules/{rule}:
    get:
      tags:
        - network
      summary: Get a NAT rule
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NatRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
      summary: Edit a NAT rule
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
        - name: rule
          in: body
          description: NAT rule
          required: true
          schema:
            $ref: '#/definitions/NatRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
      summary: Delete a NAT rule
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: nat-rules
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/cgws/{gateway}/nat-rules/{rule}:
    get:
      tags:
        - network
        - operator
      summary: Get a NAT rule
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NatRule'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
        - operator
      summary: Edit a NAT rule
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
        - name: rule
          in: body
          description: NAT rule
          required: true
          schema:
            $ref: '#/definitions/NatRule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
        - operator
      summary: Delete a NAT rule
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: nat-rules-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/ruleParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find NAT with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/bgproutes:
      get:
        tags:
          - network
        summary: Get BgpRoutes
        x-vmw-vapi-methodname: list
        x-vmc-ui-servicename: bgproutes
        x-vmw-vapi-lifecyle-internal:
        parameters:
          - $ref: '#/parameters/orgParam'
          - $ref: '#/parameters/sddcParam'
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                type: string
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /orgs/{org}/sddcs/{sddc}/vifs:
      get:
        tags:
          - network
        summary: Get VIFs
        x-vmw-vapi-methodname: list
        x-vmc-ui-servicename: vifs
        x-vmw-vapi-lifecyle-internal:
        parameters:
          - $ref: '#/parameters/orgParam'
          - $ref: '#/parameters/sddcParam'
        responses:
          '200':
            description: OK
            schema:
              type: array
              items:
                $ref: '#/definitions/VirtualInterface'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /orgs/{org}/sddcs/{sddc}/vifs/{vif}:
    post:
      tags:
        - network
      summary: attach vif
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: vifs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/vifParam'
        - name: action
          in: query
          description: |
            If = 'attach', will attach vif to vpc.
            Default behaviour is 'attach'
          required: false
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - network
      summary: delete vif
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: vifs
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/vifParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/cgws/{gateway}/l2vpn:
    get:
      tags:
        - network
        - operator
      summary: Get L2Vpn
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/L2Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
        - operator
      summary: Add a L2VPN
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: l2Vpn
          in: body
          description: L2Vpn
          required: true
          schema:
            $ref: '#/definitions/L2Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - network
        - operator
      summary: update a L2VPN
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: l2Vpn
          in: body
          description: L2Vpn
          required: true
          schema:
            $ref: '#/definitions/L2Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - network
        - operator
      summary: Delete a L2VPN
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}/l2vpn:
    get:
      tags:
        - network
      summary: Get L2Vpn
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/L2Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
      summary: Add a L2VPN
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: l2Vpn
          in: body
          description: L2Vpn
          required: true
          schema:
            $ref: '#/definitions/L2Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - network
      summary: update a L2VPN
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: l2Vpn
          in: body
          description: L2Vpn
          required: true
          schema:
            $ref: '#/definitions/L2Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - network
      summary: Delete a L2VPN
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: l2vpn
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/vpns:
    get:
      tags:
        - network
      summary: Get VPNs
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: vpns
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
      summary: Add a VPN
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: vpns
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: vpn
          in: body
          description: VPN
          required: true
          schema:
            $ref: '#/definitions/Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/vpns:
    get:
      tags:
        - network
        - operator
      summary: Get VPNs
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: vpns-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
        - operator
      summary: Add a VPN
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: vpns-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - name: vpn
          in: body
          description: VPN
          required: true
          schema:
            $ref: '#/definitions/Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/{vpnId}:
    get:
      tags:
        - network
      summary: Get a VPN
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpns
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
      summary: Edit a VPN
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: vpns
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
        - name: vpn
          in: body
          description: VPN definition
          required: true
          schema:
            $ref: '#/definitions/Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
      summary: Delete a VPN
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: vpns
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/{vpnId}:
    get:
      tags:
        - network
        - operator
      summary: Get a VPN
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpns-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
        - $ref: '#/parameters/showSensitiveData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vpn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - network
        - operator
      summary: Edit a VPN
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: vpns-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
        - name: vpn
          in: body
          description: VPN definition
          required: true
          schema:
            $ref: '#/definitions/Vpn'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - network
        - operator
      summary: Delete a VPN
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: vpns-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/vendorconfig/{vendor}:
    get:
      tags:
        - network
      summary: Get a VPN vendor config
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpn-vendor
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnVendorParam'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN vendor config with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/vendorconfig/{vendor}:
    get:
      tags:
        - network
        - operator
      summary: Get a VPN vendor config
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpn-vendor-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnVendorParam'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN vendor config with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/genericvendorconfig/{vpnId}:
    get:
      tags:
        - network
      summary: Get a VPN vendor generic config
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpn-vendor-generic
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN vendor config with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/{gatewayType}/{gateway}/vpns/genericvendorconfig/{vpnId}:
    get:
      tags:
        - network
        - operator
      summary: Get a VPN vendor generic config
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: vpn-vendor-generic-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayTypeParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/vpnParam'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find VPN vendor config with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}/networks:
    get:
      tags:
        - network
      summary: Get networks in a sddc and gateway(cgw)
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: networks
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LogicalNetwork'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
      summary: Add a network for a sddc and gateway(cgw)
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: networks
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: logicalNetwork
          in: body
          description: network configuration to create the network
          required: true
          schema:
            $ref: '#/definitions/LogicalNetwork'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: invalid input parameters to create a network
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/cgws/{gateway}/networks:
    get:
      tags:
        - network
        - operator
      summary: Get networks in a sddc and gateway(cgw)
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: networks-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LogicalNetwork'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - network
        - operator
      summary: Add a network for a sddc and gateway(cgw)
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: networks-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - name: logicalNetwork
          in: body
          description: network configuration to create the network
          required: true
          schema:
            $ref: '#/definitions/LogicalNetwork'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: invalid input parameters to create a network
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find a gateway with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs/{org}/sddcs/{sddc}/cgws/{gateway}/networks/{networkId}:
    delete:
      tags:
        - network
      summary: Delete a Logical network
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: networks
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/networkIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find Network with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/sddcs/{sddc}/cgws/{gateway}/networks/{networkId}:
    delete:
      tags:
        - network
        - operator
      summary: Delete a Logical network
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: networks-operator
      parameters:
        - $ref: '#/parameters/sddcParam'
        - $ref: '#/parameters/gatewayParam'
        - $ref: '#/parameters/networkIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find Network with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/sddcs/{sddc}/esxs:
    post:
      tags:
        - sddc
        - esx
      summary: Add/Remove one or more ESX hosts in the target cloud
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: esxs
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: action
          in: query
          description: |
            If = 'add', will add the esx.
            If = 'remove', will delete the esx/esxs bound to a single cluster (Cluster Id is mandatory for non cluster 1 esx remove).
            If = 'force-remove', will delete the esx even if it can lead to data loss (This is an privileged operation).
            If = 'addToAll', will add esxs to all clusters in the SDDC (This is an privileged operation).
            If = 'removeFromAll', will delete the esxs from all clusters in the SDDC (This is an privileged operation).
            Default behaviour is 'add'
          required: false
          type: string
        - in: body
          name: esxConfig
          description: esxConfig
          required: true
          schema:
            $ref: '#/definitions/EsxConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the SDDC with the given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

# Multi-clusters

  /orgs/{org}/sddcs/{sddc}/clusters:
    post:
      tags:
        - sddc
      summary: Add a cluster in the target sddc.
      description: Creates a new cluster in customers sddcs with passed clusterConfig.
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: clusters
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - in: body
          name: clusterConfig
          description: clusterConfig
          required: true
          schema:
            $ref: '#/definitions/ClusterConfig'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the cluster with the given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/sddcs/{sddc}/clusters/{cluster}:
    delete:
      tags:
        - sddc
      summary: Delete a cluster.
      description: This is a force operation which will delete the cluster even if there can be a data loss. Before
                   calling this operation, all the VMs should be powered off.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: clusters
      parameters:
        - $ref: "#/parameters/orgParam"
        - $ref: "#/parameters/sddcParam"
        - $ref: "#/parameters/clusterParam"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: The sddc is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
         description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the cluster with the given id
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/sddcs/{sddc}/clusters/{cluster}/replace-witness:
    post:
      tags:
        - sddc
        - impersonation
      summary: Remediate the vSAN witness node in the Multi-AZ cluster.
      description: This is an internal API to replace the vSAN witness node. The operation will first create a new vSAN witness node, call into vSphere to replace the vSAN witness node. It will then clean up the cloud resources associated with the old vSAN witness node.
      x-vmw-vapi-methodname: replaceWitness
      x-vmc-ui-servicename: clusters
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: "#/parameters/orgParam"
        - $ref: "#/parameters/sddcParam"
        - $ref: "#/parameters/clusterParam"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: >
            Bad Request.
            The cluster is not a MultiAz cluster or SDDC is not in a valid state.
            More information will be available in the error_messages field.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
         description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Cannot find the cluster with the given id
          schema:
            $ref: '#/definitions/ErrorResponse'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/ErrorResponse'

#
# Subscriptions and Billing
#
  /callbacks/csp/subscription/fulfill:
    post:
      tags:
        - subscription
      summary: Fulfill subscription
      description: Fulfill subscription callback
      x-vmw-vapi-methodname: fulfill
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - in: body
          name: subscriptionRequest
          description: subscriptionRequest
          required: true
          schema:
            $ref: '#/definitions/CspSubscriptionRequest'
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /orgs/{org}/offer-instances:
    get:
      tags:
        - subscription
      summary: List all offers available for the specific product type in the specific region
      description: |
        List all offers available for the specific product type in the specific region
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: offer-instances
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: region
          in: query
          type: string
          required: true
          description: Region for the offer
        - name: product_type
          in: query
          type: string
          required: true
          description: Type of the product in offers
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OfferInstancesHolder'
        '400':
          description: Bad APIRequest. Type of the product not supported.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /operator/orgs/{org}/subscriptions/on-demand:
    post:
      tags:
        - subscription
        - operator
      summary: Create an on-demand subscription
      description: Initiates the creation of an on-demand subscription
      x-vmw-vapi-methodname: create-on-demand
      x-vmc-ui-servicename: subscriptions
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
            $ref: '#/definitions/ErrorResponse'

  /operator/orgs/{org}/subscriptions:
    get:
      tags:
        - subscription
        - operator
      summary: Get all subscriptions of an org
      description: Returns all subscriptions for a given org id
      x-vmw-vapi-methodname: get-by-org
      x-vmc-ui-servicename: subscriptions
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/SubscriptionDetails'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
              $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/subscriptions:
    get:
      tags:
        - subscription
      summary: Get all subscriptions
      description: Returns all subscriptions for a given org id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: subscriptions
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/offerTypeQueryParam'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/SubscriptionDetails'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
              $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - subscription
      summary: Create a subscription
      description: Initiates the creation of a subscription
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: subscriptions
      parameters:
        - $ref: '#/parameters/orgParam'
        - in: body
          name: subscriptionRequest
          description: subscriptionRequest
          required: true
          schema:
            $ref: '#/definitions/SubscriptionRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/subscriptions/{subscription}:
    get:
      tags:
        - subscription
      summary: Get a subscription
      description: Get subscription details for a given subscription id
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: subscription
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/subscriptionParam'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SubscriptionDetails'
        '404':
          description: Not Found
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - subscription
      summary: Cancel a Subscription
      description: Initiates subscription cancellation. Returns Task object.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: subscription
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/subscriptionParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: >
            Bad Request.

            Check if the subscription id is still valid and if the Sddc is in a
            state that can be deleted.

            More information will be available in the error_messages field.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/orgs/{org}/account-link/customer-aws-account:
    get:
      tags:
        - account-linking
      summary: Gets customer's account which is linked to the given org.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: customer-account
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsCustomerLinkedAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - account-linking
      summary: Deletes all links to a customer's account under a given org.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: customer-account
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AwsCustomerLinkedAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/invitations/service-invitations/presets:
    get:
      tags:
        - service-invitations
        - operator
      summary: Get the list of property presets for invitations.
      description: Get the list of property presets for invitations.This can be used as input to generate invitations.
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: invitations
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceInvitationPreset'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /operator/invitations/service-invitations:
      post:
        tags:
          - service-invitations
          - operator
        summary: Generate invitations for VMC.
        description: |
                      Generate invitations for VMC. More than one invitation can be generated.
                      You can also specify a preset set of properties and/or additional properties to be attached.
        x-vmw-vapi-methodname: create
        x-vmc-ui-servicename: invitations
        parameters:
          - in: body
            name: ServiceInvitationRequest
            description: Information on the invitation request.
            required: true
            schema:
              $ref: "#/definitions/ServiceInvitationRequest"
        responses:
          '200':
            description: Ok
            schema:
              type: array
              items:
                type: string
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      get:
        tags:
          - service-invitations
          - operator
        summary: Get details of an invitation.
        description: Get details of an invitation that was generated.
        x-vmw-vapi-methodname: get
        x-vmc-ui-servicename: invitations
        parameters:
          - in: query
            name: invitationLink
            description: link to the invitation (this will be returned as part of the create).
            required: true
            type: string
        responses:
          '200':
            description: Ok
            schema:
              $ref: '#/definitions/ServiceInvitationDetail'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  /operator/delegated-access/vcenter/sddcs/{sddc}:
    post:
      tags:
        - operator
        - delegated-admin
      summary: Create delegated access vcenter user for an operator
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: delegated-admin
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/DelegatedAccessVCenterUserRequestInfo'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    get:
      tags:
        - operator
        - delegated-admin
      summary: Retrieve delegated vcenter user info if active access exists
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: delegated-admin
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Information about the active delegated access
          schema:
            $ref: '#/definitions/DelegatedAccessVCenterUserResponseInfo'
        '204':
          description: No active access exists for the operator
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - operator
        - delegated-admin
      summary: API to extend the expiry time for sddc delegated access for vcenter
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: delegated-admin
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when no user exists.
    delete:
      tags:
        - operator
        - delegated-access
      summary: Delete a delegated access user
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when no user exists.
  /operator/delegated-access/pop/sddcs/{sddc}:
    post:
      tags:
        - operator
        - delegated-access
      summary: APIRequest new active delegated PoP SSH access for an operator
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/AgentSshAccessRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    get:
      tags:
        - operator
        - delegated-access
      summary: Retrieve delegated PoP SSH access info if active access exists
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Information about the active delegated access
          schema:
            $ref: '#/definitions/AgentSshAccessResponse'
        '204':
          description: No active access exists for the operator
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - operator
        - delegated-access
      summary: Delete a delegated PoP SSH access
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
  /orgs/{org}/sddcs/{sddc}/networking/connectivity-tests:
    post:
      tags:
        - network
        - troubleshooting
      summary: ConnectivityValidationGroupResultWrapper will be  available at task.params['test_result'].
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: network-connectivity-checker
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/ConnectivityValidationGroup'
        - name: action
          in: query
          description: |
            If = 'start', start connectivity tests.
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Bad APIRequest
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    get:
      tags:
        - network
        - troubleshooting
      summary: Retrieve metadata for connectivity tests.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: network-connectivity-checker
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/ConnectivityValidationGroups'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /orgs/{org}/delegated-access/pop/sddcs/{sddc}:
    post:
      tags:
        - all-access
        - delegated-access
      summary: APIRequest new active delegated PoP SSH access
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/AgentSshAccessRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    patch:
      tags:
        - all-access
        - delegated-access
      summary: APIRequest extend existing active delegated PoP SSH access
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/AgentSshAccessRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.

    get:
      tags:
        - all-access
        - delegated-access
      summary: Retrieve delegated PoP SSH access info if active access exists
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Information about the active delegated access
          schema:
            $ref: '#/definitions/AgentSshAccessResponse'
        '204':
          description: No active access exists for the operator
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - all-access
        - delegated-access
      summary: Delete a delegated PoP SSH access
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
  /operator/delegated-access/ssh/sddcs/{sddc}:
    post:
      tags:
        - delegated-access
        - operator
      summary: APIRequest new active delegated SSH access to POP and ESX for an operator
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/DelegatedAccessSshRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    patch:
      tags:
        - delegated-access
        - operator
      summary: APIRequest extend existing active delegated SSH access to POP and ESX for an operator
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/DelegatedAccessSshRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    get:
      tags:
        - delegated-access
        - operator
      summary: Retrieve delegated SSH access to POP and ESX info if active access exists
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Information about the active delegated access
          schema:
            $ref: '#/definitions/DelegatedAccessSshResponse'
        '204':
          description: No active access exists for the operator
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - delegated-access
        - operator
      summary: Delete a delegated SSH access
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
  /orgs/{org}/delegated-access/ssh/sddcs/{sddc}:
    post:
      tags:
        - delegated-access
      summary: APIRequest new or extend existing active delegated SSH access to POP and ESX for an operator
      x-vmw-vapi-methodname: create
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/DelegatedAccessSshRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    patch:
      tags:
        - delegated-access
      summary: APIRequest to extend existing active delegated SSH access to POP and ESX for an operator
      x-vmw-vapi-methodname: update
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/DelegatedAccessSshRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest. Thrown when user already exists.
    get:
      tags:
        - delegated-access
      summary: Retrieve delegated SSH access to POP and ESX info if active access exists
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: Information about the active delegated access
          schema:
            $ref: '#/definitions/DelegatedAccessSshResponse'
        '204':
          description: No active access exists for the operator
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - delegated-access
      summary: Delete a delegated SSH access
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: delegated-access
      x-vmw-vapi-lifecyle-internal:
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
  /operator/delegated-access/vcenter/report/orgs/{org}:
    get:
      tags:
        - operator
        - delegated-access
      summary: Get Delegated Access VCenter users report
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: delegated-access
      parameters:
        - $ref: '#/parameters/orgParam'
        - name: start_date
          in: query
          type: string
          required: false
          description: Start time for the report
        - name: end_date
          in: query
          type: string
          required: false
          description: End time for the report
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DelegatedAccessVCenterUserReportItem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad APIRequest.
## Reservations: AKA Maintenance windows
  /orgs/{org}/reservations:
    get:
      tags:
        - reservations
      summary: Get all reservations for this org
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: reservations
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MaintenanceWindowEntry'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            items:
              $ref: '#/definitions/ErrorResponse'

  /orgs/{org}/reservations/{reservation}/mw:
    get:
      tags:
        - reservations
      summary: get the maintenance window for this SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: reservations
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/reservationParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaintenanceWindowGet'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'

    put:
      tags:
        - reservations
      summary: update the maintenance window for this SDDC
      x-vmw-vapi-methodname: put
      x-vmc-ui-servicename: reservations
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/reservationParam'
        - in: body
          name: window
          description: Maintenance Window
          required: true
          schema:
            $ref: '#/definitions/MaintenanceWindow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaintenanceWindow'
        '400':
          description: The reservation is not in a state that's valid for updates
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access not allowed to the operation for the current user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict with exiting reservation
          schema:
            $ref: '#/definitions/ErrorResponse'

# SddcTemplate Controller
  /orgs/{org}/sddc-templates:
    get:
      tags:
        - sddc-template
      summary: List all available SDDC configuration templates in an organization
      x-vmw-vapi-methodname: list
      x-vmc-ui-servicename: sddc-templates
      description: List all available SDDC configuration templates in an organization
      parameters:
        - $ref: '#/parameters/orgParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /operator/sddc-templates:
    get:
      tags:
        - sddc-template
        - operator
      summary: List all the SDDC configuration templates in all the orgs
      x-vmw-vapi-methodname: listAll
      x-vmc-ui-servicename: sddc-templates
      parameters:
        - $ref: '#/parameters/filterParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SddcTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /orgs/{org}/sddc-templates/{templateId}:
    get:
      tags:
        - sddc-template
      summary: Get configuration template by given template id.
      description: Get configuration template by given template id.
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddc-template
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/templateIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC Template with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - sddc-template
      summary: Delete SDDC template identified by given id.
      description: Delete SDDC template identified by given id.
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: sddc-template
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/templateIdParam'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /orgs/{org}/sddcs/{sddc}/sddc-template:
    get:
      tags:
        - sddc-template
      summary: Get configuration template for an SDDC
      description: Get configuration template for  an SDDC
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: sddc-template
      parameters:
        - $ref: '#/parameters/orgParam'
        - $ref: '#/parameters/sddcParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SddcTemplate'
        '400':
          description: SDDC is in a state that cannot be use for generating configuration template
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Cannot find the SDDC with given identifier
          schema:
            $ref: '#/definitions/ErrorResponse'

# Oauth Clients
  /operator/oauth-client:
    post:
      tags:
        - operator
        - oauth-client
      summary: Create an oauth client in the VMC service
      x-vmw-vapi-methodname: post
      x-vmc-ui-servicename: oauth-client
      parameters:
        - name: request_info
          in: body
          description: request information
          required: true
          schema:
            $ref: '#/definitions/OauthClientRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OauthClientResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Requested client already exists
          schema:
            $ref: '#/definitions/ErrorResponse'
  /operator/oauth-client/{client_id}:
    get:
      tags:
        - operator
        - oauth-client
      summary: Get information from specified oauth client
      x-vmw-vapi-methodname: get
      x-vmc-ui-servicename: oauth-client
      parameters:
        - name: client_id
          in: path
          description: Ouath Client ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OauthClientResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - operator
        - oauth-client
      summary: Delete an oauth client from the VMC service
      x-vmw-vapi-methodname: delete
      x-vmc-ui-servicename: oauth-client
      parameters:
        - name: client_id
          in: path
          description: Ouath Client ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OauthClientDeleteResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'

  /locale:
    post:
      tags:
        - locale
      summary: Set locale for the session
      description: Sets the locale for the session which is used for translating responses.
      x-vmw-vapi-methodname: set
      x-vmc-ui-servicename: locale
      parameters:
        - in: body
          name: vmcLocale
          description: The locale to be set.
          required: true
          schema:
            $ref: "#/definitions/VmcLocale"
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/VmcLocale'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  AuthToken:
    type: object
    properties:
      auth_token:
        description: Current Auth Token
        type: string
      id_token:
        description: Openid Token
        type: string
  AuthTime:
    type: object
    properties:
      time:
        type: string
  AuthIdentityHash:
    type: object
    properties:
      intercom:
        type: string
  AwsAccount:
    type: object
    required:
      - aws_account_number
      - aws_account_state
      - assume_role_arn
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          aws_account_number:
            type: string
          assume_role_arn:
            type: string
          aws_account_state:
            type: string
          org_id:
            type: string
          payer_account_type:
            type: string
            enum:
              - INTERNAL
              - CUSTOMER
          nitro_region_az_mapping:
            type: object
            properties:
              values:
                type: object
                description: A map of string properties to map values.
                additionalProperties:
                  $ref: '#/definitions/NitroDatacenterAzMapping'
          state:
            type: string
            enum:
              - ACTIVE
              - DELETED
              - INTERNAL
  AwsAccountResponseStructure:
    type: object
    required:
      - id
      - aws_account_number
      - org_id
    properties:
        id:
          type: string
        aws_account_number:
          type: string
        org_id:
          type: string
        aws_credentials:
          x-vmw-vmc-exclude: client
          $ref: '#/definitions/AwsCredentials'
  AwsCredentials:
    type: object
    properties:
      aws_access_key:
        type: string
      aws_secret_key:
        type: string
      session_token:
        type: string
  AwsAccountCreationConfig:
    type: object
    required:
      - aws_account_name
    properties:
      aws_account_name:
        type: string
      aws_email_alias:
        type: string
      poolTag:
        type: string
      existing_account:
        type: boolean
      account_properties:
        type: object
        description: A Map of properties.
        additionalProperties:
          $ref: '#/definitions/AwsAccountProperties'
  AgentAuthInfo:
    type: object
    properties:
      agent_auth_token:
        type: string
      agent_url:
        type: string
  AwsAccountProperties:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  AwsAccountConfig:
    type: object
    required:
      - aws_account_number
      - assume_role_arn
    properties:
      aws_account_number:
        type: string
      assume_role_arn:
        type: string
      org_id:
        type: string
  UpdateAwsAccountConfig:
    type: object
    required:
      - access_key
      - secret_key
    properties:
      access_key:
        type: string
      secret_key:
        type: string
      assume_role_arn:
        type: string
      payer_account_type:
        type: string
        enum:
          - INTERNAL
          - CUSTOMER
      nitro_region_az_mapping:
        type: object
        properties:
          values:
            type: object
            description: A map of string properties to map values.
            additionalProperties:
              $ref: '#/definitions/NitroDatacenterAzMapping'
  UpdateAwsAccountNitroRegionAzMapping:
    type: object
    properties:
      nitro_region_az_mapping:
        type: object
        properties:
          values:
            type: object
            description: A map of string properties to map values.
            additionalProperties:
              $ref: '#/definitions/NitroDatacenterAzMapping'
  NitroDatacenterAzMapping:
    type: object
    properties:
      values:
        type: object
        description: A map of string properties to string values. This structure holds the region to az mappings.
        additionalProperties:
          type: string
  AwsAccountLinkStatus:
    type: string
    enum:
      - NOT_SETUP
      - ACCOUNT_LINKED_ONLY
      - FULLY_LINKED
  AwsCustomerLinkedAccount:
    type: object
    properties:
      account_number:
        type: string
      vpc_id:
        type: string
      subnet_id:
        type: string
      subnet_availability_zone:
        type: string
      policy_arn:
        type: string
      policy_service_arn:
        type: string
      cf_stack_name:
        type: string
      cidr_block:
        type: string
      cidr_block_vpc:
        type: string
      default_route_table:
        type: string
      eni_group:
        type: string
      enis:
        type: array
        items:
          type: string
      customer_eni_infos:
        type: array
        items:
          type: string
  AwsCompatibleSubnets:
    type: object
    properties:
      vpc_map:
        type: object
        additionalProperties:
          $ref: '#/definitions/VpcInfoSubnets'
      customer_available_zones:
        type: array
        items:
          type: string
  AwsCustomerConnectedAccount:
    type: object
    required:
      - account_number
      - policy_payer_arn
      - policy_service_arn
      - policy_external_id
      - cf_stack_name
      - region_to_az_to_shadow_mapping
      - org_id
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          account_number:
            type: string
          policy_payer_arn:
            type: string
          policy_service_arn:
            type: string
          policy_external_id:
            type: string
          cf_stack_name:
            type: string
          region_to_az_to_shadow_mapping:
            type: object
            description: Provides a map of regions to availability zones from the shadow account's perspective
          org_id:
            type: string
  AwsSddcConnection:
    type: object
    required:
      - sddc_id
      - org_id
      - connected_account_id
      - vpc_id
      - subnet_id
      - subnet_availability_zone
      - cidr_block_vpc
      - cidr_block_subnet
      - default_route_table
      - customer_eni_infos
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          sddc_id:
            type: string
          org_id:
            type: string
          connected_account_id:
            type: string
          vpc_id:
            type: string
          subnet_id:
            type: string
          subnet_availability_zone:
            type: string
          cidr_block_vpc:
            type: string
          cidr_block_subnet:
            type: string
          default_route_table:
            type: string
          eni_group:
            type: string
          customer_eni_infos:
            type: array
            items:
              type: string
          is_cgw_present:
            type: boolean
  AwsSubnet:
    type: object
    properties:
      subnet_id:
        type: string
        description: The subnet ID in AWS, provided in the form 'subnet-######'.
      vpc_cidr_block:
        type: string
        description: The CIDR block of the VPC, in the form of '#.#.#.#/#'.
      subnet_cidr_block:
        type: string
        description: The CIDR block of the subnet, in the form of '#.#.#.#/#'.
      vpc_id:
        type: string
        description: The VPC ID the subnet resides in within AWS. Tends to be 'vpc-#######'.
      availability_zone:
        type: string
        description: The availability zone this subnet is in, which should be the region name plus one extra letter (ex. us-west-2a).
      is_compatible:
        type: boolean
        description: Flag indicating whether this subnet is compatible. If true, this is a valid choice for the customer to deploy a SDDC in.
      connected_account_id:
        type: string
        description: The connected account ID this subnet is accessible through. This is an internal ID formatted as a UUID specific to Skyscraper.
      region_name:
        type: string
        description: The region this subnet is in, usually in the form of country code, general location, and a number (ex. us-west-2).
      name:
        type: string
        description: Optional field (may not be provided by AWS), indicates the found name tag for the subnet.
  MapZonesRequest:
    type: object
    properties:
      org_id:
        description: The org ID to remap in. This is a standard UUID.
        type: string
      connected_account_id:
        description: The connected account ID to remap. This is a standard UUID.
        type: string
      petronas_regions_to_map:
        description: A list of Petronas regions to map.
        type: array
        items:
          type: string
  MapZonesResult:
    type: object
    properties:
      regions_mapped:
        description: A list of regions that were mapped-out in this operation.
        type: array
        items:
          type: string
      connected_accounts_changed:
        description: A list of connected accounts impacted by this change.
        type: array
        items:
          $ref: '#/definitions/AwsCustomerConnectedAccount'
  ConnectivityValidationGroups:
    type: object
    properties:
      groups:
        description: List of groups.
        type: array
        items:
          $ref: '#/definitions/ConnectivityValidationGroup'
  ConnectivityValidationGroup:
    type: object
    properties:
      id:
        description: test group id, currently, only HLM.
        type: string
        enum:
          - HLM
      name:
        description: Name of the test group.
        type: string
      sub_groups:
        description: List of sub groups.
        type: array
        items:
          $ref: '#/definitions/ConnectivityValidationSubGroup'
  ConnectivityValidationSubGroup:
    type: object
    properties:
      id:
        description: subGroup id, i.e. PRIMARY_DNS, SECONDARY_DNS, ONPREM_VCENTER, ONPREM_PSC, ACTIVE_DIRECTORY, and ONPREM_ESX.
        type: string
        enum:
          - PRIMARY_DNS
          - SECONDARY_DNS
          - ONPREM_VCENTER
          - ONPREM_PSC
          - ACTIVE_DIRECTORY
          - ONPREM_ESX
      label:
        description: Name of the sub-group.
        type: string
      help:
        description: Help text.
        type: string
      inputs:
        description: List of user inputs for the sub group.
        type: array
        items:
          $ref: '#/definitions/ConnectivityValidationInput'
      tests:
        description: List of connectivity tests.
        type: array
        items:
          $ref: '#/definitions/ConnectivityAgentValidation'
  ConnectivityValidationInput:
    type: object
    properties:
      id:
        description: input value type, i.e. HOSTNAME_OR_IP, HOST_IP, HOSTNAME. Accept FQDN or IP address as input value when id = HOSTNAME_OR_IP, accept FQDN ONLY when id = HOSTNAME, accept IP address ONLY when id = HOST_IP.
        type: string
        enum:
          - HOSTNAME
          - HOST_IP
          - HOSTNAME_OR_IP
      label:
        description: (Optional, for UI display only) input value label.
        type: string
      value:
        description: the FQDN or IP address to run the test against, use \#primary-dns or \#secondary-dns as the on-prem primary/secondary DNS server IP.
        type: string
  ConnectivityAgentValidation:
    type: object
    properties:
      type:
        description: type of connectivity test, i.e. PING, TRACEROUTE, DNS, CONNECTIVITY. For CONNECTIVITY test only, please specify the ports to be tested against.
        type: string
        enum:
          - PING
          - TRACEROUTE
          - DNS
          - CONNECTIVITY
      ports:
        description: TCP ports ONLY for CONNECTIVITY tests.
        type: array
        items:
          type: string
  ConnectivityValidationGroupResultWrapper:
    type: object
    properties:
      results:
        description: List of connectivity test result.
        type: array
        items:
          $ref: '#/definitions/ConnectivityValidationSubGroupResult'
  ConnectivityValidationSubGroupResult:
    type: object
    properties:
      type:
        description: connectivity validation result.
        type: string
        enum:
          - PRIMARY_DNS
          - SECONDARY_DNS
          - ONPREM_VCENTER
          - ONPREM_PSC
          - ACTIVE_DIRECTORY
          - ONPREM_ESX
      results:
        type: array
        items:
          $ref: '#/definitions/ConnectivityValidationResult'
  ConnectivityValidationResult:
    type: object
    properties:
      type:
        type: string
        enum:
          - DNS
          - PING
          - TRACEROUTE
          - CONNECTIVITY
      status:
        type: string
        enum:
          - UNTESTED
          - SUCCESS
          - FAIL
          - WARNING
          - WAITING
          - RUNNING
          - TIMEOUT
      messages:
        type: array
        description: messages from backend.
        items:
          type: string
  DnsValidationResult:
    allOf:
      - $ref: '#/definitions/ConnectivityValidationResult'
      - type: object
        properties:
          ip:
            description: IP address of on-prem Vcenter.
            type: string
          message:
            description: HLM DNS Test failure message.
            type: string
          recommendation:
            description: HLM DNS Test recommendation message.
            type: string
  PingValidationResult:
    allOf:
      - $ref: '#/definitions/ConnectivityValidationResult'
      - type: object
        properties:
          rtt_max:
            description: RTT max value.
            type: string
          rtt_min:
            description: RTT min value.
            type: string
          rtt_dev:
            description: RTT dev value.
            type: string
          pkt_sent:
            description: PKT sent value.
            type: string
          pkt_rcvd:
            description: RTT received value.
            type: string
          rtt_avg:
            description: RTT average value.
            type: string
  TraceRouteValidationResult:
    allOf:
      - $ref: '#/definitions/ConnectivityValidationResult'
      - type: object
  TcpConnectivityValidationResult:
    allOf:
      - $ref: '#/definitions/ConnectivityValidationResult'
      - type: object
        properties:
          results:
            description: List of TCP connectivity test result.
            type: array
            items:
              $ref: '#/definitions/TcpPortConnectivityValidationResult'
  TcpPortConnectivityValidationResult:
    type: object
    properties:
      port:
        description: TCP port number for connectivity test.
        type: string
      message:
        description: Connectivity test error message.
        type: string
      status:
        description: TCP connectivity status.
        type: string
        enum:
          - UNTESTED
          - SUCCESS
          - FAIL
          - WARNING
          - WAITING
          - RUNNING
          - TIMEOUT
  SddcConnectionDeleteRequest:
    type: object
    properties:
      sddc_connection_ids:
        description: The list of sddc connections (by ID) to remove.
        type: array
        items:
          type: string
  AbstractEntity:
    type: object
    required:
      - created
      - id
      - user_id
      - user_name
      - updated
      - updated_by_user_id
      - version
    properties:
      created:
        type: string
        format: date-time
      id:
        description: Unique ID for this entity
        type: string
        example: 1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32
      user_id:
        description: User id that last updated this record
        type: string
      user_name:
        description: User name that last updated this record
        type: string
      updated:
        type: string
        format: date-time
      updated_by_user_id:
        description: User id that last updated this record
        type: string
      updated_by_user_name:
        description: User name that last updated this record
        type: string
      version:
        description: Version of this entity
        type: integer
        format: int32
        example: 5
  Task:
    type: object
    required:
      - start_time
      - status
      - sub_status
      - task_type
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          end_time:
            type: string
            format: date-time
          error_message:
            type: string
          localized_error_message:
            type: string
          org_id:
            type: string
            example: 1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32
          params:
            type: object
          resource_id:
            type: string
            description: UUID of resources task is acting upon
          resource_type:
            type: string
            description: Type of resource being acted upon
          recorded_features:
            x-vmw-vmc-exclude: client
            type: object
            properties:
              values:
                type: object
                description: A map of string properties to boolean values. This structure holds the feature state
                additionalProperties:
                  type: boolean
          start_time:
            type: string
            format: date-time
          status:
            type: string
            enum:
              - STARTED
              - CANCELING
              - FINISHED
              - FAILED
              - CANCELED
          sub_status:
            type: string
          task_type:
            type: string
          task_version:
            type: string
          task_progress_phases:
            description: Task progress phases involved in current task execution
            type: array
            items:
              $ref: '#/definitions/TaskProgressPhase'
          progress_percent:
            description: Estimated progress percentage the task executed
            type: integer
            format: int32
            example: 75
          estimated_remaining_minutes:
            description: >-
              Estimated remaining time in minute of the task execution, < 0
              means no estimation for the task.
            type: integer
            format: int32
            example: 4
          phase_in_progress:
            description: >-
              The current in progress phase ID in the task execution, if none in
              progress, empty string returned.
            type: string
          service_errors:
             description: Service errors returned from SDDC services.
             type: array
             items:
               $ref: '#/definitions/ServiceError'
          task_sub_status_transitions:
             description: A record of each time the task changed sub-status with its associated timestamp.
             x-vmw-vmc-exclude: client
             type: array
             items:
               $ref: '#/definitions/TaskSubStatusTransition'
          task_error_details:
             description: A record of errors codes that occurred to cause this task to fail.
             x-vmw-vmc-exclude: client
             type: array
             items:
               $ref: '#/definitions/TaskErrorDetails'

  TaskProgressPhase:
    description: >-
      A task progress can be (but does NOT have to be) divided to more
      meaningful progress phases.
    type: object
    required:
      - id
      - name
      - progress_percent
    properties:
      id:
        description: The identifier of the task progress phase
        type: string
      name:
        description: The display name of the task progress phase
        type: string
      progress_percent:
        description: The percentage of the phase that has completed
        type: integer
        format: int32
  ServiceError:
    description: >-
      Detailed service errors associated with a task.
    type: object
    required:
      - error_code
      - original_service
      - original_service_error_code
    properties:
      error_code:
        description: Localizable error code.
        type: string
      original_service:
        description: The original service name of the error.
        type: string
      original_service_error_code:
        description: The original error code of the service.
        type: string
      default_message:
        description: Error message in English.
        type: string
      localized_message:
        description: The localized message.
        type: string
      params:
        description: The parameters of the service error.
        type: array
        items:
          type: string
  TaskSubStatusTransition:
    description: Represents a transition from one sub status to the next.
    type: object
    required:
      - new_sub_status
      - old_sub_status
      - transition_time
    properties:
      new_sub_status:
        description: The new sub status to which the task has transitioned.
        type: string
      old_sub_status:
        description: The task's sub status before the transition.
        type: string
      transition_time:
        description: The timestamp at which the transition occurred.
        type: string
  TaskErrorDetails:
    description: Represents error details associated with the task.
    type: object
    required:
      - error_details
      - task_phase
      - status
      - sub_status
    properties:
      error_details:
        description: Internal Error Details containin an error code
        $ref: '#/definitions/InternalErrorDetails'
      task_phase:
        description: The phase the task was in when it failed.
        type: string
      status:
        description: The status the task was in before it failed.
        type: string
      sub_status:
        description: The sub_status that task was in before it failed.
        type: string
  InternalErrorDetails:
    type: object
    required:
      - error_code
    properties:
      error_code:
        description: Internal Error Code representing the cause of the failure
        $ref: '#/definitions/InternalErrorCode'
  InternalErrorCode:
    type: object
    required:
      - error_code
    properties:
      error_code:
        description: A code indicating the root cause of the failure.
        type: string
  SksFeature:
    type: object
    description:  >-
      Represent a skyscraper feature object.
    required:
      - id
      - description
      - enable
    properties:
      id:
        type: string
      description:
        type: string
      enable:
        type: boolean
      type:
        type: string
        enum:
          - INTERNAL
          - CUSTOMER
      category:
        type: string
        enum:
          - UI
          - SERVICE
          - E2E
      toggle_type:
        type: string
        enum:
          - GLOBAL
          - TARGET_BY_SCOPE
      state:
        type: string
        enum:
          - ACTIVE
          - OBSOLETE
          - NOT_FOUND
      applicable_scope:
        $ref: '#/definitions/ApplicableScope'
      namespace:
         type: string
      is_base_feature:
         type: boolean
      additional_properties:
          type: object
          additionalProperties:
            type: string
  ApplicableScope:
    type: object
    description: >-
      Represent the scope in which a feature will be applicable.
    properties:
      whitelisted_keys:
        type: array
        items:
          type: string
      blacklisted_keys:
        type: array
        items:
          type: string
      rollout_percent:
        type: integer
        format: int32
  FeatureEvaluationStatus:
    type: object
    description: >-
      Represent the evaluation status of the feature in context of resourceKey(Example orgId).
    properties:
      applicable_status:
        type: boolean
        readOnly: true
  SksFeatureDetails:
    type: object
    description: >-
      Represent a complete feature and evaluation status in context of resourceKey(Example orgId).
    properties:
      feature:
         $ref: '#/definitions/SksFeature'
      status:
         $ref: '#/definitions/FeatureEvaluationStatus'
  SksFeaturePatchRequest:
    description:  >-
      Patch request to update SksFeature.
    type: object
    properties:
      description:
        type: string
      enable:
        type: boolean
      applicable_scope:
          $ref: '#/definitions/ApplicableScopePatchRequest'
  ApplicableScopePatchRequest:
    description:  >-
      Patch request to update ApplicableScope of SksFeature.
    type: object
    properties:
      rollout_percent:
        type: integer
        format: int32
      whitelisted_keys:
        type: array
        items:
          type: string
      add_whitelisted_keys:
        type: array
        items:
          type: string
      remove_whitelisted_keys:
        type: array
        items:
          type: string
      blacklisted_keys:
        type: array
        items:
          type: string
      add_blacklisted_keys:
        type: array
        items:
          type: string
      remove_blacklisted_keys:
        type: array
        items:
          type: string
  ConfigResponse:
    type: object
    properties:
      service_definition_link:
        type: string
        x-vmw-vmc-exclude: client
      all_roles:
        type: array
        x-vmw-vmc-exclude: client
        description: Available, assignable Operator Roles specific to VMC
        items:
          type: string
  ConfigRequest:
    type: object
    properties:
      flushRequest:
        $ref: '#/definitions/FlushAuthTokenRequest'
  ConnectedServiceStatus:
    type: object
    description: Describes the state of a service connection.
    properties:
      service_name:
        type: string
        description: The service's short name, also serves as its id.
      active:
        type: boolean
        description: When true, this connection is active.
      attributes:
        type: object
        additionalProperties:
          type: string
        description: A list of additional attributes about a service.
  ServicesAvailableResult:
    type: object
    description: Describes which services are availalbe for a given org.
    properties:
      serviceIds:
        type: array
        items:
          type: string
        description: A list of service IDs that can be used to further query, enable, disable a given service.
  FlushAuthTokenRequest:
    type: object
    properties:
      auth_token:
        type: string
        description: Authentication token to flush.
  EntitySummary:
    type: object
    required:
      - id
      - version
    properties:
      id:
        type: string
        description: entity Id
      version:
        type: integer
        format: int32
        description: current version of entity
      updated:
        type: string
        format: date-time
        description: UTC time entity was last updated
  ErrorResponse:
    type: object
    required:
      - error_code
      - error_messages
      - status
      - path
      - retryable
    properties:
      error_code:
        type: string
        description: unique error code
      error_messages:
        type: array
        description: localized error messages
        items:
          type: string
      status:
        type: integer
        description: HTTP status code
      path:
        type: string
        description: Originating request URI
      retryable:
        type: boolean
        default: false
        description: If true, client should retry operation
  Organization:
    type: object
    required:
      - display_name
      - id
      - name
      - project_state
      - version
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          display_name:
            type: string
            example: My VMC Org
          name:
            type: string
          properties:
            $ref: '#/definitions/OrgProperties'
          project_state:
            type: string
            enum:
              - CREATED
              - DELETED
          org_type:
            type: string
            description: ORG_TYPE to be associated with the org
            example: CUSTOMER
  OrgPatchStructure:
    type: object
    properties:
      org_type:
        type: string
        description: ORG_TYPE to be associated with the org
        example: CUSTOMER
      properties:
        $ref: '#/definitions/OrgProperties'
  OrgProperties:
    type: object
    properties:
      values:
        type: object
        description: A map of string properties to values.
        additionalProperties:
          type: string
  UsageJobRequest:
    type: object
    properties:
      job_name:
        type: string
        description: job name to identify the job
      s3_access_key:
        type: string
        description: access key to aws s3 bucket associated with specified aws s3 usage file
      s3_secret_key:
        type: string
        description: secret key to aws s3 bucket associated with specified aws s3 usage file
      s3_bucket_name:
        type: string
        description: aws s3 bucket associated with specified aws s3 usage file
      s3_manifest_file:
        type: string
        description: the path of specified aws s3 manifest file for aws usage report which usage job can run against
      job_type:
        type: string
        description: defines job configuration. If not specified, defaults to REPORTING.
        enum:
          - REPORTING
          - VERIFICATION
  UsageJob:
    type: object
    required:
      - job_state
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          job_name:
            type: string
            description: name for UsageJob
          job_state:
            type: string
            enum:
              - STARTED
              - FAILED
              - COMPLETED
              - COMPLETED_WITH_ERRORS
  UsageJobBatch:
    type: object
    required:
      - batch_state
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          usage_job_id:
            type: string
            description: usage job id
          csp_request_link:
            type: string
            description: link of csp request
          batch_state:
            type: string
            enum:
              - ACCEPTED
              - FAILED
              - DONE
              - DONE_WITH_ERROR
              - TIMEOUT
          total_record_count:
            type: integer
            format: int32
            description: total account of usage records in the batch
          offset:
            $ref: '#/definitions/UsageJobBatchOffset'
          batch_error:
            $ref: '#/definitions/UsageJobBatchError'
  UsageJobBatchOffset:
    type: object
    properties:
      batch_start_offset:
        type: integer
        format: int32
      batch_end_offset:
        type: integer
        format: int32
      source_file_path:
        type: string
  UsageJobBatchError:
    type: object
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          usage_job_id:
            type: string
            description: usage job id
          error_records:
            type: array
            items:
              $ref: '#/definitions/ErrorRecord'
  ErrorRecord:
    type: object
    properties:
      csp_error_code:
        type: string
        description: csp error code
      record_id:
        type: string
        description: record identifier
      record_payload:
        $ref: '#/definitions/ReportUsageRecord'
  ReportUsageRecord:
    type: object
    properties:
      service_internal_id:
        type: string
        description: the service internal id
      subscription_link:
        type: string
        description: csp subscription link
      timestamp:
        type: string
        description: timestamp of the record
      billable_usages:
        type: array
        items:
          $ref: '#/definitions/BillableUsage'
  BillableUsage:
    type: object
    properties:
      start:
        type: string
      end:
        type: string
      name:
        type: string
      quantity:
        type: string
      region_code:
        type: string
      release:
        type: string
      context:
        type: array
        items:
          properties:
            key:
              type: string
            value:
              type: string
  UsageSearchRequest:
    type: object
    required:
      - aws_accounts
    properties:
      aws_accounts:
        type: array
        items:
          type: string
        description: A list of AWS shadow account IDs to find information about.
  UsageSearchResponse:
    type: object
    required:
      - subscriptions
    properties:
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/CspSubscriptionInfo'
  CspSubscriptionInfo:
    type: object
    properties:
      ref_link:
        type: string
      sid:
        type: string
      start_date:
        type: string
      subscription_state:
        type: string
        enum:
          - ACTIVE
          - VMC_AWS_ACCOUNT_NOT_FOUND
          - VMC_ORGANIZATION_NOT_FOUND
          - VMC_SUBSCRIPTION_NOT_FOUND
          - VMC_SUBSCRIPTION_LINK_EMPTY
          - VMC_SID_EMPTY
          - VMC_SUBSCRIPTION_NOT_STARTED
  SubscriptionPeriod:
    type: object
    properties:
      interval:
        type: integer
        format: int32
      interval_unit:
        type: string
        enum:
          - Nanos
          - Micros
          - Millis
          - Seconds
          - Minutes
          - Hours
          - HalfDays
          - Days
          - Weeks
          - Months
          - Years
          - Decades
          - Centuries
          - Millennia
          - Eras
          - Forever
  SubscriptionRequest:
    type: object
    required:
      - offer_name
      - offer_version
      - product_type
      - commitment_term
      - region
      - quantity
    properties:
      offer_name:
        type: string
      offer_version:
        type: string
      product_type:
        type: string
      commitment_term:
        type: string
      region:
        type: string
      quantity:
        type: integer
    example:
        offer_name: VMware Cloud on AWS
        offer_version: "1.0"
        product_type: host
        commitment_term: "12"
        region: "US_WEST_2"
        quantity: 1
  SubscriptionDetails:
    type: object
    description: details of a subscription
    properties:
      anniversary_billing_date:
        type: string
      auto_renewed_allowed:
        type: string
      billing_subscription_id:
        type: string
      commitment_term:
        type: string
      commitment_term_uom:
        type: string
        description: unit of measurment for commitment term
      csp_subscription_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      offer_name:
        type: string
      offer_type:
        $ref: '#/definitions/OfferType'
      offer_version:
        type: string
      quantity:
        type: string
      region:
        type: string
      start_date:
        type: string
      status:
        type: string
        enum: [CREATED, ACTIVATED, FAILED, CANCELLED, EXPIRED, PENDING_PROVISIONING]
  OfferInstancesHolder:
    type: object
    description: Holder for the offer instances.
    required:
      - on_demand
      - offers
    properties:
      on_demand:
        $ref: '#/definitions/OnDemandOfferInstance'
      offers:
        type: array
        items:
          $ref: '#/definitions/TermOfferInstance'
    example:
      on_demand:
        name: VMware Cloud on AWS
        version: "1.0"
        description: VMware Cloud on AWS
        product_type: host
        region: US_WEST_2
        currency: USD
        unit_price: "16.7362"
        monthly_cost: "12050.0640"
      offers:
        - name: VMware Cloud on AWS
          version: "1.0"
          description: VMware Cloud on AWS
          product_type: host
          region: US_WEST_2
          currency: USD
          commitment_term: 12
          unit_price: "55000.0"
        - name: VMware Cloud on AWS
          version: "1.0"
          description: VMware Cloud on AWS
          product_type: host
          region: US_WEST_2
          currency: USD
          commitment_term: 36
          unit_price: "120000.0"
  OfferType:
    type: string
    enum: [TERM, ON_DEMAND]
  OnDemandOfferInstance:
    type: object
    description: Holder for the on-demand offer instance.
    required:
      - name
      - version
      - description
      - product_type
      - region
      - currency
      - unit_price
      - monthly_cost
    properties:
      name:
        type: string
      version:
        type: string
      description:
        type: string
      product_type:
        type: string
      region:
        type: string
      currency:
        type: string
      unit_price:
        type: string
      monthly_cost:
        type: string
    example:
      name: VMware Cloud on AWS
      version: "1.0"
      description: VMware Cloud on AWS
      product_type: host
      region: US_WEST_2
      currency: USD
      unit_price: "16.7362"
      monthly_cost: "12050.0640"
  TermOfferInstance:
    type: object
    description: Holder for the term offer instances.
    required:
      - name
      - version
      - description
      - product_type
      - region
      - currency
      - commitment_term
      - unit_price
    properties:
      name:
        type: string
      version:
        type: string
      description:
        type: string
      product_type:
        type: string
      region:
        type: string
      currency:
        type: string
      commitment_term:
        type: integer
      unit_price:
        type: string
    example:
      name: VMware Cloud on AWS
      version: "1.0"
      description: VMware Cloud on AWS
      product_type: host
      region: US_WEST_2
      currency: USD
      commitment_term: 12
      unit_price: "55000.0"
  Sddc:
    type: object
    required:
      - provider
      - created
      - name
      - sddc_state
      - user_id
      - user_name
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          provider:
            type: string
            enum:
              - AWS
          name:
            type: string
            description: name for SDDC
          resource_config:
            $ref: '#/definitions/SddcResourceConfig'
          sddc_state:
            type: string
            enum:
              - DEPLOYING
              - READY
              - DELETING
              - DELETION_FAILED
              - DELETED
              - FAILED
          org_id:
            type: string
          sddc_type:
            type: string
            description: Type of the sddc
          expiration_date:
            type: string
            format: date-time
            description: Expiration date of a sddc in UTC (will be set if its applicable)
          account_link_state:
            type: string
            enum:
              - DELAYED
              - LINKED
              - UNLINKED
            description: Account linking state of the sddc
  SddcResourceConfig:
    type: object
    required:
      - provider
    discriminator: provider
    properties:
      admin_password:
        x-vmw-vmc-exclude: client
        type: string
        description: Password for vCenter administrator
      admin_username:
        x-vmw-vmc-exclude: client
        type: string
        description: Username for vCenter administrator
      agent:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/Agent'
      cloud_username:
        type: string
        description: Username for vCenter SDDC administrator
      cloud_user_group:
        type: string
        description: Group name for vCenter SDDC administrator
      cloud_password:
        type: string
        description: Password for vCenter SDDC administrator
      custom_properties:
        type: object
        additionalProperties:
          type: string
      vxlan_subnet:
        type: string
        description: VXLAN IP subnet
      mgw_id:
        type: string
        description: Management Gateway Id
      cgws:
        type: array
        items:
          type: string
          description: set of compute gateway ids configured in the sddc
      esx_hosts:
        type: array
        items:
          $ref: '#/definitions/EsxHost'
      provider:
        type: string
        description: Discriminator for additional properties
        enum:
          - AWS
      psc_url:
        type: string
        description: URL of the PSC server
      nsx_mgr_url:
        type: string
        description: URL of the NSX Manager
      sddc_networks:
        type: array
        items:
          type: string
          description: set of network ids configured in the sddc
      vc_instance_id:
        type: string
        description: unique id of the vCenter server
      vc_url:
        type: string
        description: URL of the vCenter server
      sso_domain:
        type: string
        description: The SSO domain name to use for vSphere users
      vc_management_ip:
        type: string
        description: vCenter internal management IP
      vc_public_ip:
        type: string
        description: vCenter public IP
      vc_ssh_credential:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/Credential'
      psc_management_ip:
        type: string
        description: PSC internal management IP
      nsx_mgr_management_ip:
        type: string
        description: NSX Manager internal management IP
      esx_cluster_id:
        type: string
        description: Cluster Id to add ESX workflow
      management_rp:
        type: string
      management_ds:
        type: string
        description: The ManagedObjectReference of the management Datastore
      nsx_manager_username:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Manager administrator
      nsx_manager_password:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Manager administrator Password
      nsx_manager_audit_username:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Manager auditor
      nsx_manager_audit_password:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Manager auditor Password
      root_nsx_controller_password:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Controller root Password
      root_nsx_edge_password:
        x-vmw-vmc-exclude: client
        type: string
        description: NSX Edge root Password
      sddc_manager_credentials:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/SddcManagerCredentials'
      sub_domain:
        x-vmw-vmc-exclude: client
        type: string
        description: the subdomain of the sddc
      nsx_reverse_proxy_url:
        x-vmw-vmc-exclude: client
        type: string
        description: nsx reverse proxy url
      certificates:
        x-vmw-vmc-exclude: client
        type: object
        description: the certificates installed in the sddc
        additionalProperties:
          $ref: '#/definitions/SddcCertificateInfo'
      management_vms:
        x-vmw-vmc-exclude: client
        type: object
        description: the management VMs in the Sddc
        additionalProperties:
          $ref: '#/definitions/ManagementVm'
      dns_with_management_vm_private_ip:
        type: boolean
        description: if true, use the private IP addresses to register DNS records for the management VMs
      fleet_management_username:
        x-vmw-vmc-exclude: client
        type: string
        description: Username for Fleet Management user
      fleet_management_password:
        x-vmw-vmc-exclude: client
        type: string
        description: Password for Fleet Management user
      backup_restore_vc_username:
        x-vmw-vmc-exclude: client
        type: string
        description: Username for VC Backup Restore user
      backup_restore_vc_password:
        x-vmw-vmc-exclude: client
        type: string
        description: Password for VC Backup Restore user
      clusters:
        type: array
        description: List of clusters in the SDDC.
        items:
          $ref: '#/definitions/Cluster'
      deployment_type:
        type: string
        description: Denotes if this is a SingleAZ SDDC or a MultiAZ SDDC.
        enum:
          - SINGLE_AZ
          - MULTI_AZ
      availability_zones:
        type: array
        description: Availability zones over which esx hosts are provisioned. MultiAZ SDDCs will have hosts provisioned over two availability zones while SingleAZ SDDCs will provision over one.
        items:
          type: string
          description: Name of the availability zone.
      witness_availability_zone:
        type: string
        description: Availability zone where the witness node is provisioned for a MultiAZ SDDC. This is null for a SingleAZ SDDC.
      nsxt:
        type: boolean
        description: if true, NSX-T UI is enabled.
      esx_host_subnet:
        type: string
        description: ESX host subnet
      mgmt_appliance_network_name:
        type: string
        description: Name for management appliance network.
      mgmt_appliance_connectivity_logical_switch_id:
        x-vmw-vmc-exclude: client
        type: string
        description: ID of Logical switch which connects MGW to CGW.
      is_mgmt_appliance_connectivity_enabled:
        x-vmw-vmc-exclude: client
        type: boolean
        description: if true, management appliance connectivity from overlay network is enabled.
      sddc_manifest:
        $ref: '#/definitions/SddcManifest'
  SddcManifest:
    type: object
    description: Describes software components of the installed SDDC
    properties:
      esx_ami:
        $ref: '#/definitions/AmiInfo'
      esx_nsxt_ami:
        $ref: '#/definitions/AmiInfo'
      glcm_bundle:
        $ref: '#/definitions/GlcmBundle'
      metadata:
        $ref: '#/definitions/Metadata'
      vmc_version:
        type: string
        description: the vmcVersion of the sddc for display
      vmc_internal_version:
        type: string
        description: the vmcInternalVersion of the sddc for internal use
      pop_info:
        type: object
        $ref: '#/definitions/PopInfo'
  SddcSpec:
    type: object
    description: Client input parameters for bringing up an SDDC
    properties:
      bundle_spec:
        type: object
        description: Imaging bundle repo
        properties:
          bundle_id:
            type: string
            description: the glcmbundle's id
          bundle_repo:
            type: string
            description: the glcmbundle's repo
      cluster_specs:
        type: array
        description: A list of cluster spec
        items:
          type: object
          description: VC Cluster definition spec
          properties:
            cluster_id:
              type: string
              description: the cluster's id
            vcenter_id:
              type: string
              description: the vcenter's id
      dnsSpec:
        type: object
        description: DNS spec
        properties:
          domain:
            type: string
            description: domain name
          subdomain:
            type: string
            description: subdomain name
          nameserver:
            type: string
            description: name server
      dvsSpecs:
        type: array
        description: A list of DVS Spec
        items:
          type: object
          description: DVS Spec
          properties:
            dvsId:
              type: string
              description: the dvs's id
            dvsUUID:
              type: string
              description: the dvs's uuid
      esxiHostSpecs:
        type: array
        description: A list of ESXi Spec
        items:
          type: object
          description: ESXi Spec
          properties:
            esxiHostname:
              type: string
              description: the esx hostname
            esxiKey:
              type: string
              description: the esx key
            esxiCredentials:
              x-vmw-vmc-exclude: client
              $ref: '#/definitions/Credential'
      networkSpecs:
        type: array
        description: A list of network Spec
        items:
          type: object
          description: a network spec
          properties:
            vlANId:
              type: string
              description: the vlan id
            gateway:
              type: string
              description: the gateway
            subnet:
              type: string
              description: the subnet
      nsxSpecs:
        type: array
        description: A list of network Spec
        items:
          type: object
          description: a network spec
          properties:
            nsxId:
              type: string
              description: the nsx id
            nsxManagerHostname:
              type: string
              description: the nsx manager hostname
            nsxManagerIp:
              type: string
              description: the nsx manager ip
            rootNsxManagerPassword:
              x-vmw-vmc-exclude: client
              $ref: '#/definitions/Credential'
      ntpSpec:
        type: object
        description: NTP spec
        properties:
          ntpServers:
            type: string
            description: ntp server
      sddcId:
        type: string
        format: UUID
        description: UUID of the sddc
      vCenterSpecs:
        type: array
        description: A list of VC Spec
        items:
          type: object
          description: a VC spec
          properties:
            vcenterId:
              type: string
              description: the VC id
            vcenterHostname:
              type: string
              description: the VC hostname
            vcenterIP:
              type: string
              description: the VC ip
            rootVcenterPassword:
              x-vmw-vmc-exclude: client
              $ref: '#/definitions/Credential'
      vsanSpecs:
        type: array
        description: A list of VSAN Spec
        items:
          type: object
          description: a VSAN spec
          properties:
            vcenterId:
              type: string
              description: the VC id
            vsanId:
              type: string
              description: the VSAN id
  PopInfo:
    type: object
    description: Present a SDDC PoP information.
    required:
      - ami_infos
    properties:
      id:
        type: string
        format: UUID
        description: UUID of the PopInfo
      created_at:
        type: string
        format: date-time
        description: The PopInfo (or PoP AMI) created time. Using ISO 8601 date-time pattern.
      ami_infos:
        type: object
        description: 'A map of [region name of PoP / PoP-AMI]:[PopAmiInfo].'
        additionalProperties:
          $ref: '#/definitions/PopAmiInfo'
      service_infos:
        type: object
        description: 'A map of [service type]:[PopServiceInfo]'
        additionalProperties:
          $ref: '#/definitions/PopServiceInfo'

  PopAmiInfo:
    allOf:
      - $ref: '#/definitions/AmiInfo'
      - properties:
          type:
            type: string
            default: POP
            description: 'PoP AMI type. CENTOS: a Centos AMI; POP: a PoP AMI.'
            enum:
              - CENTOS
              - POP
  PopServiceInfo:
    type: object
    required:
      - service
    properties:
      service:
        type: string
        description: An enum of PoP related services (including os platform and JRE).
        enum:
          - OS
          - AGENT
          - GLCM
          - S3_ADAPTER
          - JRE
          - DOCKER
          - AIDE
          - RTS
          - FM_MANAGEMENT
          - FM_LOG_COLLECTOR
          - FM_METRICS_COLLECTOR
          - BRE
          - BRF
          - REVERSE_PROXY
          - FORWARD_PROXY
          - DNS
          - NTP
          - LOGZ_LOG_COLLECTOR
      version:
        type: string
        description: The service API version.
      build:
        type: string
        description: The service build number.
      cln:
        type: string
        description: The service change set number.
  PopServiceStatus:
    type: object
    properties:
      service:
        type: string
        description: Deprecated. An enum of services which are required for status checking.
        enum:
          - GLCM
          - S3_ADAPTER
          - DOCKER
          - RTS
          - FM_MANAGEMENT
          - FM_LOG_COLLECTOR
          - FM_METRICS_COLLECTOR
          - BRE
          - BRF
          - FORWARD_PROXY
          - DNS
          - NTP
          - LOGZ_LOG_COLLECTOR
          - SCHEDULER
          - INSTALL
      service_id:
        type: string
        description: The name of the service.
      status:
        type: string
        description: The service status. A enum.
        enum:
          - UP
          - DOWN
      message:
        type: string
        description: The service status message.
      sddc_dependency:
        type: string
        description: The service dependency for the SDDC
        enum:
          - CRITICAL
          - OPTIONAL
          - INSTALL_ONLY
          - PROVISION_ONLY
  AmiInfo:
    type: object
    description: the AmiInfo used for deploying esx of the sddc
    properties:
      id:
        type: string
        description: the ami id for the esx
      name:
        type: string
        description: the name of the esx ami
      region:
        type: string
        description: the region of the esx ami
  GlcmBundle:
    type: object
    description: the GlcmBundle used for deploying the sddc
    properties:
      id:
        type: string
        description: the glcmbundle's id
      s3Bucket:
        type: string
        description: the glcmbundle's s3 bucket
  Metadata:
    type: object
    description: metadata of the sddc manifest
    properties:
      cycle_id:
        type: string
        description: the cycle id
      timestamp:
        type: string
        description: the timestamp for the bundle
  SddcManagerCredentials:
    type: object
    properties:
      sddc_manager_pwd:
        type: string
      root_credential:
        $ref: '#/definitions/Credential'
        description: root user credential of the Sddc Node Manager
      second_user_credential:
        $ref: '#/definitions/Credential'
        description: second user credential of the Sddc Node Manager
      rest_api_credential:
        $ref: '#/definitions/Credential'
        description: Restful API credential of the Sddc Node Manager
  Credential:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  SddcCertificateInfo:
    type: object
    properties:
      entity:
        type: string
        description: the entity ID
      serial_num:
        type: string
        description: vendor specific serial number
      fingerprint:
        type: string
        description: certificate fingerprint
      certificate:
        type: string
        description: PEM encoded certificate
  ManagementVm:
    type: object
    properties:
      id:
        type: string
        description: a globally unique ID provided by the service that manages this VM
      management_ip:
        type: string
        description: the management IP address of this VM
      private_dns_record:
        type: boolean
        description: if true, the DNS record will be created in the private zone
      public_dns_record:
        type: boolean
        description: if true, the DNS record will be created in the public zone
      fqdn:
        type: string
        description: the fully qualified domain name of the management VM in the DNS record
  ReverseProxyEpConfig:
    type: object
    properties:
      endpoint:
        type: string
        description: required. the endpoint in PoP URL link. e.g. the full reverse proxy endpoint url is https://<pop fqdn><endpoint>
      location_config:
        type: string
        description: required in post. the nginx location directive content. It must be wrapped with "{.....}".
      server_type:
        type: string
        description: the PoP reverse proxy virtual server type. optional. default is SERVER_443
        enum:
          - SERVER_443
          - SERVER_9443
  AwsSddcResourceConfig:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    allOf:
      - $ref: '#/definitions/SddcResourceConfig'
      - properties:
          region:
            type: string
          max_num_public_ip:
            type: integer
            description: maximum number of public IP that user can allocate.
          aws_region:
            x-vmw-vmc-exclude: client
            $ref: '#/definitions/Region'
          vpc_claim_type:
            x-vmw-vmc-exclude: client
            type: string
          public_ip_pool:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
          internal_public_ip_pool:
            x-vmw-vmc-exclude: client
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
          no_nat:
            x-vmw-vmc-exclude: client
            type: boolean
          edge_vmci_auth_token:
            x-vmw-vmc-exclude: client
            type: string
          dvs_uuid:
            x-vmw-vmc-exclude: client
            type: string
          mgw_intermediate_ip:
            x-vmw-vmc-exclude: client
            type: string
          agent_hostname:
            x-vmw-vmc-exclude: client
            type: string
          vpc_info:
            $ref: '#/definitions/VpcInfo'
          vpc_info_peered_agent:
            $ref: '#/definitions/VpcInfo'
          backup_restore_bucket:
            type: string
          account_link_sddc_config:
            type: array
            items:
              $ref: '#/definitions/SddcLinkConfig'
  SddcLinkConfig:
    type: object
    properties:
      connected_account_id:
        type: string
        description: Determines which connected customer account to link to
      customer_subnet_ids:
        type: array
        items:
          type: string
          description: A list of AWS subnet IDs to create links to in the customer's account
  ZeroSddcResourceConfig:
    type: object
    x-vmw-vapi-discriminated-by: "ZEROCLOUD"
    allOf:
      - $ref: '#/definitions/SddcResourceConfig'
      - properties:
          region:
            type: string
          max_num_public_ip:
            type: integer
            description: maximum number of public IP that user can allocate.
          public_ip_pool:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'

  SddcProvisioningSpec:
    type: object
    description: Describes a provisiong spec of an sddc-type.
    properties:
      sddc_type:
        type: string
        description: The type of sddc (not an ENUM because when more types can get added it needs code change)
      expire_after_in_days:
        type: integer
        description: Indicates after how many days the sddc should expire
      min_hosts_per_sddc:
        type: integer
        description: Minimum number hosts a sddc in an org can have
      max_hosts_per_sddc:
        type: integer
        description: Maximum number hosts a sddc can have
      max_hosts_per_sddc_on_create:
        type: integer
        description: Maximum number hosts a sddc should have on initial sddc creation
      max_clusters_per_sddc:
        type: integer
        description: The maximum number of clusters an sddc can have during provisioning
      default_hosts_per_sddc:
        type: integer
        description: The default number of hosts a sddc can have

  SddcCapability:
    type: object
    properties:
      sddc_type:
        type: string
        description: describes the type of sddc "1NODE","DEFAULT"
      add_hosts:
        type: boolean
      remove_hosts:
        type: boolean
      add_cluster:
        type: boolean
      remove_cluster:
        type: boolean
      scale_up:
        type: boolean
      draas:
        type: boolean
      planned_maintenance:
        type: boolean
      auto_remediation:
        type: boolean
      sddc_patching:
        type: boolean
      sddc_monitoring:
        type: boolean
  Region:
    type: object
    properties:
      name:
        type: string
      region:
        type: string

  VpcInfo:
    type: object
    properties:
      id:
        type: string
      route_table_id:
        type: string
      vpc_cidr:
        type: string
      api_subnet_id:
        type: string
        description: Id associated with this VPC
      api_association_id:
        type: string
        description: Id of the association between subnet and route-table
      edge_subnet_id:
        type: string
        description: Id of the NSX edge associated with this VPC
      edge_association_id:
        type: string
        description: Id of the association between edge subnet and route-table
      private_subnet_id:
        type: string
      esx_security_group_id:
        type: string
      vm_security_group_id:
        type: string
      peering_connection_id:
        type: string
      internet_gateway_id:
        type: string
      subnet_id:
        type: string
      association_id:
        type: string
      security_group_id:
        type: string
      default_key_pair:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/AwsKeyPair'
      vif_ids:
        type: array
        items:
          type: string
          description: set of virtual interfaces attached to the sddc
      vgw_route_table_id:
        type: string
        description: Route table which contains the route to VGW
  Agent:
    type: object
    required:
      - provider
    discriminator: provider
    properties:
      provider:
        type: string
      id:
        type: string
      network_cidr:
        type: string
      agent_url:
        type: string
      internal_ip:
        type: string
      last_health_status_change:
        type: integer
      healthy:
        type: boolean
      network_gateway:
        type: string
      network_netmask:
        type: string
      reserved_ip:
        type: string
      custom_properties:
        type: object
        additionalProperties:
          type: string
      addresses:
        type: array
        items:
          type: string
          description: Public IP and DNS names
  AwsAgent:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    allOf:
      - $ref: '#/definitions/Agent'
      - properties:
          instance_id:
            type: string
          key_pair:
            $ref: '#/definitions/AwsKeyPair'
  AwsKeyPair:
    type: object
    properties:
      key_name:
        type: string
      key_fingerprint:
        type: string
      key_material:
        type: string

  EsxHost:
    type: object
    discriminator: provider
    required:
      - provider
    properties:
      esx_id:
        type: string
      custom_properties:
        type: object
        additionalProperties:
          type: string
      hostname:
        type: string
      mac_address:
        type: string
      name:
        type: string
      provider:
        type: string
      esx_state:
        type: string
        enum:
          - DEPLOYING
          - PROVISIONED
          - READY
          - DELETING
          - DELETED
          - FAILED
      esx_credential:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/Credential'
      availability_zone:
        type: string
        description: Availability zone where the host is provisioned.

  AwsEsxHost:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    allOf:
      - $ref: '#/definitions/EsxHost'
      - properties:
          instance_id:
            x-vmw-vmc-exclude: client
            type: string
          launch_host:
            x-vmw-vmc-exclude: client
            type: boolean
          internal_public_ip_pool:
            type: array
            items:
              $ref: '#/definitions/SddcPublicIp'
  SddcConfig:
    type: object
    discriminator: provider
    required:
      - provider
      - name
      - num_hosts
    properties:
      num_hosts:
        type: integer
        format: int32
      name:
        type: string
      provider:
        type: string
        description: Determines what additional properties are available based on cloud provider.
        enum:
          - AWS
      vxlan_subnet:
        type: string
        description: VXLAN IP subnet
      vpc_cidr:
        type: string
        description: AWS VPC IP range. Only prefix of 16 or 20 is currently supported.
        default: 10.0.0.0/16
      sso_domain:
        type: string
        description: The SSO domain name to use for vSphere users. If not specified, vmc.local will be used.
        default: vmc.local
      deployment_type:
        type: string
        description: Denotes if request is for a SingleAZ or a MultiAZ SDDC. Default is SingleAZ.
        enum:
          - SingleAZ
          - MultiAZ
      sddc_type:
        type: string
        description: Denotes the sddc type , if the value is null or empty, the type is considered as default.
      sddc_manifest:
        x-vmw-vmc-exclude: client
        $ref: '#/definitions/SddcManifest'
      account_link_sddc_config:
        type: array
        description: A list of the SDDC linking configurations to use.
        items:
          $ref: '#/definitions/AccountLinkSddcConfig'
      account_link_config:
        description: The account linking configuration, we will keep this one and remove accountLinkSddcConfig finally.
        $ref: '#/definitions/AccountLinkConfig'
      sddc_template_id:
        type: string
        format: UUID
        description: If provided, configuration from the template will applied to the provisioned SDDC.
  AccountLinkSddcConfig:
    type: object
    properties:
      connected_account_id:
        type: string
        description: The ID of the customer connected account to work with.
      customer_subnet_ids:
        type: array
        items:
          type: string
          description: The ID of the subnet to use.
  AccountLinkConfig:
    type: object
    properties:
      delay_account_link:
        type: boolean
        default: false
        description: Boolean flag identifying whether account linking should be delayed or not for the SDDC.
  AwsSddcConfig:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    allOf:
      - $ref: '#/definitions/SddcConfig'
      - properties:
          region:
            type: string
          esx_ami:
            x-vmw-vmc-exclude: client
            type: string
          glcm_build_number:
            x-vmw-vmc-exclude: client
            type: string
          agent_build_number:
            x-vmw-vmc-exclude: client
            type: string
        required:
          - region
  VpcInfoSubnets:
    type: object
    allOf:
      - properties:
          vpc_id:
            type: string
            description: The ID of the VPC these subnets belong to.
          description:
            type: string
            description: The description of the VPC; usually it's name or id.
          cidr_block:
            type: string
            description: The overall CIDR block of the VPC. This is the AWS primary CIDR block.
          subnets:
            type: array
            items:
              $ref: '#/definitions/SubnetInfo'
  SubnetInfo:
      type: object
      allOf:
        - properties:
            subnet_id:
              type: string
              description: The ID of the subnet.
            subnet_cidr_block:
              type: string
              description: The CIDR block of the subnet.
            vpc_cidr_block:
              type: string
              description: The CIDR block of the VPC containing this subnet.
            vpc_id:
              type: string
              description: The ID of the VPC this subnet resides in.
            availability_zone:
              type: string
              description: The availability zone (customer-centric) this subnet is in.
            region_name:
              type: string
              description: The region this subnet is from.
            name:
              type: string
              description: The name of the subnet. This is either the tagged name or the default AWS id it was given.
            connected_account_id:
              type: string
              description: The ID of the connected account this subnet is from.
            compatible:
              type: boolean
              description: Is this customer subnet compatible with the SDDC?
            note:
              type: string
              description: Why a subnet is marked as not compatible. May be blank if compatible.
  EsxConfig:
    type: object
    required:
      - num_hosts
    properties:
      num_hosts:
        type: integer
        format: int32
      availability_zone:
        type: string
        description: Availability zone where the hosts should be provisioned. (Can be specified only for privileged host operations).
      storage_capacity:
        description: For EBS-backed instances only, the requested storage capacity in GiB to add or remove, in GiB.
        x-vmw-vmc-exclude: client
        type: integer
        format: int64
  CloudProvider:
    type: object
    discriminator: provider
    required:
      - provider
    properties:
      provider:
        type: string
        description: Name of the Cloud Provider
  AwsCloudProvider:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    allOf:
      - $ref: '#/definitions/CloudProvider'
      - properties:
          regions:
            type: array
            items:
              type: string
              description: Regions supported by the cloud provider for sddc deployment
  SddcPublicIp:
    type: object
    required:
      - public_ip
    properties:
      allocation_id:
        type: string
      public_ip:
        type: string
      name:
        type: string
      associated_private_ip:
        type: string
      dnat_rule_id:
        type: string
      snat_rule_id:
        type: string
  SddcAllocatePublicIpSpec:
    type: object
    required:
      - count
    properties:
      count:
        type: integer
        format: int32
      private_ips:
        type: array
        items:
          type: string
        description: >-
          List of workload VM private IPs to be assigned the public IP just
          allocated.
      names:
        type: array
        items:
          type: string
        description: List of names for the workload VM public IP assignment.
  Gateway:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      eip_set:
        type: boolean
        description: Boolean flag identifying if eip_set value is set with no errors from backend
      eip:
        type: string
      firewall_rules_populated:
        type: boolean
        description: Boolean flag identifying if firewall_rules value is set with no errors from backend
      firewall_rules:
        type: array
        items:
          $ref: '#/definitions/FirewallRule'
      vpns_populated:
        type: boolean
        description: Boolean flag identifying if vpns value is set with no errors from backend
      vpns:
        type: array
        items:
          $ref: '#/definitions/Vpn'
      primary_dns_set:
        type: boolean
        description: Boolean flag identifying if primary_dns value is set with no errors from backend
      primary_dns:
        type: string
      secondary_dns_set:
        type: boolean
        description: Boolean flag identifying if secondary_dns value is set with no errors from backend
      secondary_dns:
        type: string
  ManagementGateway:
    type: object
    allOf:
      - $ref: '#/definitions/Gateway'
      - properties:
          subnet_cidr_set:
            type: boolean
            description: >-
              Boolean flag identifying if subnet_cidr value is set with no
              errors from backend
          subnet_cidr:
            type: string
            description: mgw network subnet cidr
  ComputeGateway:
    type: object
    allOf:
      - $ref: '#/definitions/Gateway'
      - properties:
          nat_rules_populated:
            type: boolean
            description: >-
              Boolean flag identifying if nat_rules are populated with no errors
              from backend
          nat_rules:
            type: array
            items:
              $ref: '#/definitions/NatRule'
          logical_networks_populated:
            type: boolean
            description: >-
              Boolean flag identifying if logical_networks are populated with no
              errors from backend
          logical_networks:
            type: array
            items:
              $ref: '#/definitions/LogicalNetwork'
          public_IPs:
            type: array
            items:
              type: string
            description: set of public IPs for the gateway
          l2_vpn:
            type: object
            items:
              $ref: '#/definitions/L2Vpn'
  DnsServers:
    type: object
    properties:
      primary_dns:
        type: string
      secondary_dns:
        type: string
  FirewallService:
    type: object
    properties:
      protocol:
        type: string
        description: protocol name, such as 'tcp', 'udp' etc.
      ports:
        type: array
        items:
          type: string
        description: a list of port numbers and port ranges, such as {80, 91-95, 99}. If not specified, defaults to 'any'.
  FirewallRuleScope:
    type: object
    description: Optional for FirewallRule. If not specified, defaults to 'any'.
    properties:
      vnic_group_ids:
        type: array
        items:
          description: vnic group id
          type: string
          enum:
            - vse
            - internal
            - external
            - vnic-index-0
            - vnic-index-1
            - vnic-index-2
            - vnic-index-3
            - vnic-index-4
            - vnic-index-5
            - vnic-index-6
            - vnic-index-7
            - vnic-index-8
            - vnic-index-9
      grouping_object_ids:
        type: array
        items:
          description: Id of IPAddresses grouping Objects available to the gateway.
          type: string
  FirewallRule:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      revision:
        type: integer
        readOnly: true
        format: int32
        description: current revision of the list of firewall rules, used to protect against concurrent modification (first writer wins)
      name:
        type: string
      rule_type:
        type: string
        enum:
          - USER
          - DEFAULT
        readOnly: true
      action:
        type: string
        enum:
          - ALLOW
          - DENY
      services:
        type: array
        items:
          $ref: '#/definitions/FirewallService'
        description: list of protocols and ports for this firewall rule
      source:
        type: string
        description: Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated list of those entries. If not specified, defaults to 'any'.
      source_scope:
        $ref: '#/definitions/FirewallRuleScope'
      destination:
        type: string
        description: Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated list of those entries. If not specified, defaults to 'any'.
      destination_scope:
        $ref: '#/definitions/FirewallRuleScope'
      application_ids:
        type: array
        items:
          description: Id of Service available to the gateway.
          type: string
      rule_interface:
        type: string
        description: Deprecated, left for backwards compatibility. Remove once UI stops using it.
  L2Vpn:
    type: object
    properties:
      listener_ip:
        type: string
        description: Public uplink ip address. IP of external interface on which L2VPN service listens to.
      enabled:
        type: boolean
        description: Enable (true) or disable (false) L2 VPN.
      sites:
        type: array
        description: Array of L2 vpn site config.
        items:
          $ref: '#/definitions/Site'
  Site:
    type: object
    properties:
      name:
        type: string
        description: Unique name for the site getting configured.
      user_id:
        type: string
        description: Site user id.
      password:
        type: string
        description: Site password.
      secure_traffic:
        type: boolean
        description: Enable/disable encription.
      tunnel_status:
        type: string
        enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
        readOnly: true
        description: Site tunnel status.
      established_date:
        type: string
        readOnly: true
        description: Date tunnel was established.
      tx_bytes_from_local_subnet:
        type: integer
        format: int64
        readOnly: true
        description: Bytes transmitted from local subnet.
      rx_bytes_on_local_subnet:
        type: integer
        format: int64
        readOnly: true
        description: Bytes received on local network.
      dropped_rx_packets:
        type: string
        readOnly: true
        description: Number of received packets dropped.
      dropped_tx_packets:
        type: string
        readOnly: true
        description: Number of transmitted packets dropped.
      failure_message:
        type: string
        readOnly: true
        description: failure message.
  VirtualInterface:
    type: object
    properties:
      id:
        type: string
        description: Identifier for the virtual interface
      name:
        type: string
        description: Name of the virtual interface
      state:
        type: string
        description: State of the virtual interface
        enum:
          - Confirming
          - Verifying
          - Pending
          - Available
          - Down
          - Deleting
          - Deleted
          - Rejected
          - Attached
          - Attaching
          - Error
      customer_address:
        type: string
        description: Customer CIDR
      direct_connect_id:
        type: string
        description: Identifier for the Direct connect connection
      bgp_status:
        type: string
        enum:
          - Up
          - Down
  Vpn:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      version:
        type: string
        readOnly: true
      state:
        type: string
        enum:
          - CONNECTED
          - DISCONNECTED
          - PARTIALLY_CONNECTED
          - UNKNOWN
        readOnly: true
      tunnel_statuses:
        type: array
        items:
          $ref: '#/definitions/VpnTunnelStatus'
      channel_status:
        $ref: '#/definitions/VpnChannelStatus'
      name:
        type: string
      on_prem_gateway_ip:
        type: string
      on_prem_nat_ip:
        type: string
      on_prem_network_cidr:
        type: string
      internal_network_ids:
        type: array
        items:
          type: string
      ike_option:
        type: string
        enum:
          - IKEV1
          - IKEV2
      digest_algorithm:
        type: string
        enum:
          - SHA1
          - SHA_256
      encryption:
        type: string
        enum:
          - AES
          - AES256
          - AES_GCM
          - TRIPLE_DES
          - UNKNOWN
      authentication:
        type: string
        enum:
          - PSK
          - UNKNOWN
      dh_group:
        type: string
        enum:
          - DH2
          - DH5
          - DH14
          - DH15
          - DH16
          - UNKNOWN
      pfs_enabled:
        type: boolean
      enabled:
        type: boolean
      pre_shared_key:
        type: string
  VpnTunnelStatus:
    type: object
    properties:
      local_subnet:
        type: string
        readOnly: true
      on_prem_subnet:
        type: string
        readOnly: true
      tunnel_status:
        type: string
        enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
        readOnly: true
      tunnel_state:
        type: string
        readOnly: true
      last_info_message:
        type: string
        readOnly: true
      failure_message:
        type: string
        readOnly: true
      traffic_stats:
        type: object
        items:
          $ref: '#/definitions/VpnTunnelTrafficStats'
  VpnTunnelTrafficStats:
    type: object
    properties:
      tx_bytes_from_local_subnet:
        type: string
      rx_bytes_on_local_subnet:
        type: string
      packets_out:
        type: string
      packet_sent_errors:
        type: string
      encryption_failures:
        type: string
      sequence_number_over_flow_errors:
        type: string
      packets_in:
        type: string
      packet_received_errors:
        type: string
      decryption_failures:
        type: string
      replay_errors:
        type: string
      integrity_errors:
        type: string
  VpnChannelStatus:
    type: object
    properties:
      channel_status:
        type: string
        enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
        readOnly: true
      channel_state:
        type: string
        readOnly: true
      last_info_message:
        type: string
        readOnly: true
      failure_message:
        type: string
        readOnly: true
  LogicalNetwork:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
        description: name of the network
      subnet_cidr:
        type: string
        description: the subnet cidr
      dhcp_ip_range:
        type: string
        description: >-
          ip range within the subnet mask, range delimiter is '-' (example
          10.118.10.130-10.118.10.140)
      gatewayIp:
        type: string
        description: gateway ip of the logical network
      dhcp_enabled:
        type: string
        description: if 'true' - enabled; if 'false' - disabled
      tunnel_id:
        type: integer
        format: int32
        description: tunnel id of extended network
      network_type:
        type: string
        enum:
          - HOSTED
          - ROUTED
          - EXTENDED
        readOnly: true
  NatRule:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      action:
        type: string
        enum:
          - dnat
          - snat
      revision:
        type: integer
        readOnly: true
        format: int32
        description: current revision of the list of nat rules, used to protect against concurrent modification (first writer wins)
      name:
        type: string
      public_ip:
        type: string
      public_ports:
        type: string
      internal_ip:
        type: string
      internal_ports:
        type: string
      protocol:
        type: string
      rule_type:
        type: string
  CspSubscriptionRequest:
    type: object
    description: |
      Callback from CSP
    properties:
      userLink:
        type: string
      orgLink:
        type: string
      subscriptionLink:
        type: string
      timeStamp:
        type: string
        format: date-time
      context:
        type: array
        items:
          properties:
            key:
              type: string
            value:
              type: string
  PopServiceLifeCycleSpecV1:
      type: object
      description: |
        Pop tenant Service lifecycle spec to perform lifecycle action.
      properties:
        serviceParams:
          type: object
          description: Pop tenant Service lifecycle spec is a hashmap with key as tenant service name and value is param string
                               required for perfoming lifecycle action.
          additionalProperties:
            type: string

  SddcUpgradeEventRequest:
    type: object
    required:
      - sddc_id
      - vmc_version_to
      - fsm_id
      - upgrade_event_type
    properties:
      sddc_id:
        type: string
      fsm_id:
        type: string
      vmc_version_to:
        type: string
      upgrade_event_type:
        type: string
        enum:
          - PRE_UPGRADE
          - PRE_UPGRADE_ROLLBACK
          - POST_CONTROL_PLANE_UPGRADE
      upgrade_event_status:
        type: string
        enum:
          - IN_PROGRESS
          - FAILED
          - SUCCESS
  SddcAlert:
    type: object
    description: Base alert type
    discriminator: alert_type
    required:
      - alert_type
      - sddc_id
      - timestamp
    properties:
      alert_type:
        type: string
        description: Identifies the specific alert type
      sddc_id:
        type: string
      timestamp:
        type: string
        format: date-time
  SddcVpnStateAlert:
    type: object
    x-vmw-vapi-discriminated-by: "vpn_state"
    allOf:
      - $ref: '#/definitions/SddcAlert'
      - properties:
          edge_id:
            type: string
          old_state:
            type: string
            enum:
              - CONNECTED
              - DISCONNECTED
              - UNKNOWN
          new_state:
            type: string
            enum:
              - CONNECTED
              - DISCONNECTED
              - UNKNOWN
          local_subnet:
            type: string
          peer_subnet:
            type: string
  NodeInfo:
    type: object
    properties:
      leader:
        type: boolean
      name:
        type: string
      quiesced:
        type: boolean
        description: Is node quiesced and ready to be shut down
      active_state:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeActiveStateInfo'
  NodeActiveStateInfo:
    type: object
    description: A Map of subsystems to subssystem specific info about current active state.
    discriminator: type
    required:
      - type
    properties:
      type:
        type: string
  TaskActiveStateInfo:
    type: object
    allOf:
      - $ref: '#/definitions/NodeActiveStateInfo'
      - properties:
          running_listeners:
            type: array
            items:
              type: string
          running_tasks:
            type: array
            items:
              type: string
              format: UUID
  ServiceInvitationPreset:
    type: object
    description: List of presets for invitation propreties.
    properties:
      preset_name:
        type: string
        description: A unique name to represent the preset. This should be used as input to generate invites.
      description:
        type: string
      invitation_properties:
        type: object
        additionalProperties:
          type: string
  ServiceInvitationRequest:
    type: object
    description: APIRequest object to generate VMC Service Invitations
    properties:
      preset_name:
        description: The name of the preset whose properties need to be attached to the invitation. Use value from  ServiceInvitationPresets.preset_name
        type: string
      number_of_invitations:
        type: integer
        description: No of invitation links to be generated. Arbitrary limit of 100.
      invitation_properties:
        description: Additional invitation properties. Please note if you provide the same key as a preset, this will override that property.
        type: object
        additionalProperties:
          type: string
      funds_required:
        type: boolean
        description: Override the preset to specify if the customer getting this invite requires a fund or not.
  ServiceInvitationDetail:
    type: object
    description: Details about a service invitation. This is a pass through api to CSP.
    properties:
      invitation_link:
        type: string
      service_definition_link:
        type: string
      expiration_time:
        type: integer
      status:
        type: string
      tos_signed_by:
        type: string
      context:
        type: object
  DelegatedAccessVCenterUserRequestInfo:
    type: object
    description: Delegated Access VCenter User request information
    required:
      - user_type
    properties:
      user_type:
        type: string
        enum:
          - READ_ONLY
          - CLOUD_ADMIN
          - ROOT_ADMIN
      reason:
        type: string
        description: Reason for the request
  DelegatedAccessVCenterUserResponseInfo:
    type: object
    description: Object capturing response information for delegated access user
    required:
      - user_name
      - user_type
      - start_date
      - end_date
    properties:
      id:
        type: string
        description: Id identifying the delegated access vcenter user
      user_name:
        type: string
        description: Name of the operator requesting access
      user_type:
        type: string
        enum:
          - READ_ONLY
          - CLOUD_ADMIN
          - ROOT_ADMIN
      password:
        type: string
        description: Generated password for the delegated vcenter user created
      start_date:
        type: string
        format: date-time
        description: Start time for the delegated access
      end_date:
        type: string
        format: date-time
        description: End time for the delegated access
      reason:
        type: string
        description: Reason for delegated access
      vcenter_html_url:
        type: string
        description: HTML5 vcenter url
      vcenter_flash_url:
        type: string
        description: Flash vcenter url
      agent_sub_domain:
        type: string
        description: Sub-domain for the PoP Agent
      agent_login_token:
        type: string
        description: Login Token for the PoP Agent
  AgentSshAccessRequest:
    type: object
    description: Used for requesting PoP SSH access.
    required:
      - reason
    properties:
      reason:
        type: string
        description: The reason to request PoP SSH access.
  AgentSshAccessResponse:
    type: object
    description: Object to present the PoP SSH access information
    required:
      - user_name
      - pop_host
      - start_time
      - end_time
      - ssh_private_key
    properties:
      user_name:
        type: string
        description: The user name to ssh to PoP
      pop_host:
        type: string
        description: PoP host FQDN or IP
      start_time:
        type: string
        format: date-time
        description: Start time for the delegated access
      end_time:
        type: string
        format: date-time
        description: End time for the delegated access
      ssh_private_key:
        type: string
        description: The private key used for ssh to PoP
  DelegatedAccessSshRequest:
    type: object
    description: Used for requesting SSH access.
    required:
      - reason
    properties:
      reason:
        type: string
        description: The reason to request SSH access.
  DelegatedAccessSshResponse:
    type: object
    description: Object to present the SSH access information
    required:
      - user_name
      - pop_host
      - start_time
      - end_time
      - ssh_private_key
    properties:
      user_name:
        type: string
        description: The user name to ssh to PoP
      pop_host:
        type: string
        description: PoP host FQDN or IP
      start_time:
        type: string
        format: date-time
        description: Start time for the delegated access
      end_time:
        type: string
        format: date-time
        description: End time for the delegated access
      ssh_private_key:
        type: string
        description: The private key used for ssh to PoP
      esx_access:
        type: array
        items:
          $ref: '#/definitions/EsxSshAccessInfo'
  DelegatedAccessVCenterUserReportItem:
    type: object
    description: Object representing Delegated Access VCenter Report Row
    properties:
      id:
        type: string
        description: Id identifying the delegated access vcenter user
      user_type:
        type: string
        description: Type of role identifying the type of access
        enum:
          - READ_ONLY
          - CLOUD_ADMIN
          - ROOT_ADMIN
      status:
        type: string
        description: Type identifying the status of the access
        enum:
          - ACTIVE
          - DELETED
      start_date:
        type: string
        format: date-time
        description: Start of the delegated access
      end_date:
        type: string
        format: date-time
        description: End time of the delegated access
      org_id:
        type: string
        description: Org ID to which the SDDC is part of
      sddc_id:
        type: string
        description: SDDC ID of the delegated access
      sddc_name:
        type: string
        description: SDDC Name
      location:
        type: string
        description: SDDC Location
  EsxSshAccessInfo:
    type: object
    description: Object representing SSH Access info for a ESX Host.
    properties:
      host_address:
        type: string
        description: IP Address of the ESX Host.
      status:
        type: string
        description: Enum representing if the access creation was successfull or failed.
        enum:
          - SUCCEEDED
          - FAILED
      message:
        type: string
        description: String reason representing reason of failure in case of failures.
  ManagementVmConfig:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The management VM ID
      requestManagementIp:
        type: boolean
        description: If true, request an IP address on the management network. When updating the current configuration, set to null to keep the current settings.
      privateDnsRecord:
        type: boolean
        description: If true, the DNS record will be created in the private zone
      publicDnsRecord:
        type: boolean
        description: If true, the DNS record will be created in the public zone
      publicDnsEip:
        type: string
        description: The public ip for the public DNS record in the public zone
  ManagementVmCertificate:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The management VM ID
      certificateChain:
        type: array
        description: The certificate chain from leaf to the root.
        items:
            type: string
  ManagementVmCsrParam:
    type: object
    required:
      - csr
    properties:
      csr:
        description: Certificate signing request
        type: string
  ClusterConfig:
    type: object
    required:
      - num_hosts
    properties:
      num_hosts:
        type: integer
        format: int32
      storage_capacity:
        description: For EBS-backed instances only, the requested storage capacity in GiB.
        x-vmw-vmc-exclude: client
        type: integer
        format: int64
  Cluster:
    type: object
    required:
      - cluster_id
    discriminator: cluster_id
    properties:
      cluster_id:
        type: string
      cluster_name:
        type: string
      cluster_vcenter_mo_id:
        x-vmw-vmc-exclude: client
        type: string
      cluster_state:
        type: string
        enum:
          - DEPLOYING
          - ADDING_HOSTS
          - READY
          - FAILED
      esx_host_list:
        type: array
        items:
          $ref: '#/definitions/EsxHost'
      volume_list:
        x-vmw-vmc-exclude: client
        description: "List of storage volumes used by this cluster"
        type: array
        items:
          $ref: '#/definitions/StorageVolume'
      disk_group_list:
        x-vmw-vmc-exclude: client
        description: "List of VSAN disk groups used in this cluster"
        type: array
        items:
          $ref: '#/definitions/VsanDiskGroup'
  N10n:
    type: object
    required:
      - client_id
      - status
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          client_id:
            type: string
            description: Unique identifier (client supplied). This must be unique across ALL services.
          status:
            type: string
            enum:
              - ACTIVE
              - DISABLED
          web_socket_info:
            $ref: '#/definitions/WebSocketInfo'
          web_hook_info:
            $ref: '#/definitions/WebHookInfo'
  WebSocketInfo:
    type: object
    required:
      - event_types
    properties:
      event_types:
        type: array
        items:
          type: string
          description: Event names (service specific)
  WebHookInfo:
    type: object
    required:
      - callback_uri
      - event_types
    properties:
      callback_uri:
        type: string
        description: Call back URI
      event_types:
        type: array
        items:
          type: string
          description: Event names (service specific)

  MaintenanceWindowEntry:
      type: object
      properties:
        reservation_id:
          type: string
          format: uuid
          description: "ID for reservation"
        sddc_id:
          type: string
          format: uuid
          description: "SDDC ID for this reservation"
        in_maintenance_window:
          type: boolean
          description: true if the SDDC is in the defined Mainentance Window
        in_maintenance_mode:
          type: boolean
          description: true if the SDDC is currently undergoing maintenance
        reservation_schedule:
          $ref: '#/definitions/ReservationSchedule'

  MaintenanceWindow:
    type: "object"
    properties:
      day_of_week:
        type: "string"
        enum:
        - "SUNDAY"
        - "MONDAY"
        - "TUESDAY"
        - "WEDNESDAY"
        - "THURSDAY"
        - "FRIDAY"
        - "SATURDAY"
      hour_of_day:
        type: "integer"
        format: "int32"

  MaintenanceWindowGet:
    type: "object"
    allOf:
      - $ref: '#/definitions/MaintenanceWindow'
      - properties:
          duration_min:
            type: "integer"
            format: "int64"
          version:
            type: "integer"
            format: "int64"

  ReservationSchedule:
    type: object
    allOf:
      - $ref: '#/definitions/MaintenanceWindowGet'
      - properties:
          reservations:
            type: "array"
            items:
              $ref: '#/definitions/Reservation'
          reservations_mw:
            type: "array"
            items:
              $ref: '#/definitions/ReservationInMw'

  Reservation:
    type: "object"
    properties:
      rid:
        type: "string"
        description: "Reservation ID"
        format: "uuid"
      start_time:
        type: "string"
        description: "Start time of a reservation"
        format: date-time
        example: "2018-05-01'T'05:00:00'Z'"
      duration:
        type: "integer"
        format: "int64"
        description: "Duration - required for reservation in maintenance window"
      create_time:
        type: "string"
        description: Optional
      metadata:
        type: "object"
        description: Optional
        additionalProperties:
          type: 'string'

  ReservationInMw:
    type: "object"
    properties:
      rid:
        type: "string"
        description: "Reservation ID"
        format: "uuid"
      create_time:
        type: "string"
        description: Optional
        format: date-time
      metadata:
        type: "object"
        description: Optional
        additionalProperties:
          type: 'string'
      week_of:
        type: "string"
        description: "SUNDAY of the week that maintenance is scheduled, ISO format date"

  DvsProperty:
      type: "object"
      properties:
        property:
          type: "string"
          description: "Property Name"
        value:
          type: "string"
          description: "Property Value"

  N10nRequest:
    type: object
    properties:
      web_socket_info:
        $ref: '#/definitions/WebSocketRequestInfo'
      web_hook_info:
        $ref: '#/definitions/WebHookRequestInfo'
  WebSocketRequestInfo:
    type: object
    required:
      - client_verifier
      - event_types
    properties:
      client_verifier:
        type: string
        description: Unique id used to authorize websocket requests
      event_types:
        type: array
        items:
          type: string
          description: Event names (service specific)
      notify_on_event_types:
        type: object
        properties:
          values:
            type: object
            description: A map of string properties to string values. This structure holds the event type to filter mapping.
            additionalProperties:
              type: array
              items:
                type: string
                description: Filter specs
    example:
      notify_on_event_types: {
        "Task:Completion" : ["task/task_type eq 'SUPERTASK1'"]
      }
  WebHookRequestInfo:
    type: object
    required:
      - callback_uri
      - event_types
    properties:
      callback_uri:
        type: string
        description: Call back URI
      event_types:
        type: array
        items:
          type: string
          description: Event names (service specific)
      notify_on_event_types:
        type: object
        properties:
          values:
            type: object
            description: A map of string properties to string values. This structure holds the event type to filter mapping.
            additionalProperties:
              type: array
              items:
                type: string
                description: Filter specs
      callback_headers:
        type: object
        description: Map of Rest Headers and values to be used in the callback
        additionalProperties:
          type: string
      csp_cred_model:
        $ref: '#/definitions/CspCredModel'

  CspCredModel:
    type: object
    required:
      - cred_type
      - csp_url
    properties:
      cred_type:
        type: string
        enum:
          - REFRESH_TOKEN
          - PASSWORD
          - CLIENT_CREDENTIALS
      username:
        type: string
        description: required if cred_type == PASSWORD
      password:
        type: string
        description: required if cred_type == PASSWORD
      refresh_token:
        type: string
        description: required if cred_type == REFRESH_TOKEN
      client_credential:
        $ref: '#/definitions/OauthClientCredentials'
      csp_url:
        type: string
        description: CSP endpoint caller is registered with

  OauthClientCredentials:
    type: object
    required:
      - client_id
      - client_secret
    properties:
      client_id:
        type: string
      client_secret:
        type: string
  JobResponse:
    type: object
    properties:
      job_name:
        type: string
      previous_fire_time:
        type: string
        format: date-time
      next_fire_time:
        type: string
        format: date-time

  OauthClientRequest:
    type: object
    properties:
      client_id:
        type: string
      client_secret:
        type: string
      redirect_uris:
        type: array
        items:
          type: string
      grant_types:
        type: array
        items:
          type: string
      access_token_ttl:
        type: integer
      refresh_token_ttl:
        type: integer

  OauthClientResponse:
    type: object
    properties:
      client_id:
        type: string
      redirect_uris:
        type: array
        items:
          type: string
      grant_types:
        type: array
        items:
          type: string
      access_token_ttl:
        type: integer
      refresh_token_ttl:
        type: integer
      allowed_scopes:
        type: array
        items:
          type: string

  OauthClientDeleteResponse:
    type: object
    properties:
      client_id:
        type: string

  GatewayTemplate:
    type: object
    description: Describes common properties for MGW and CGW configuration templates
    properties:
      public_ip:
        $ref: '#/definitions/SddcPublicIp'
      primary_dns:
        type: string
      secondary_dns:
        type: string
      firewall_rules:
        type: array
        items:
          $ref: '#/definitions/FirewallRule'
      vpns:
        type: array
        items:
          $ref: '#/definitions/Vpn'

  ManagementGatewayTemplate:
    type: object
    allOf:
      - $ref: '#/definitions/GatewayTemplate'
      - properties:
          subnet_cidr:
              type: string
              description: mgw network subnet cidr
  ComputeGatewayTemplate:
    type: object
    allOf:
      - $ref: '#/definitions/GatewayTemplate'
      - properties:
          nat_rules:
            type: array
            items:
              $ref: '#/definitions/NatRule'
          logical_networks:
            type: array
            items:
              $ref: '#/definitions/LogicalNetwork'
          l2_vpn:
            type: object
            items:
              $ref: '#/definitions/L2Vpn'
  NetworkTemplate:
    type: object
    properties:
      management_gateway_templates:
        type: array
        items:
          $ref: '#/definitions/ManagementGatewayTemplate'
      compute_gateway_templates:
        type: array
        items:
          $ref: '#/definitions/ComputeGatewayTemplate'
  SddcTemplate:
    type: object
    required:
      - created
      - name
      - state
    allOf:
      - $ref: '#/definitions/AbstractEntity'
      - properties:
          org_id:
            type: string
          name:
            type: string
            description: name for SDDC configuration template
          state:
            type: string
            enum:
              - INITIALIZING
              - AVAILABLE
              - INUSE
              - APPLIED
              - DELETING
              - DELETED
              - FAILED
          source_sddc_id:
            type: string
          sddc:
            $ref: '#/definitions/Sddc'
          account_link_sddc_configs:
            type: array
            description: A list of the SDDC linking configurations to use.
            items:
              $ref: '#/definitions/AccountLinkSddcConfig'
          network_template:
            $ref: '#/definitions/NetworkTemplate'
  ZoneChangeRequest:
    type: object
    properties:
      current_subnet:
        type: string
        description: The current zone expressed as a customer subnet in which the CGW is currently occupying.

  VsanDiskGroup:
    type: object
    required:
      - cache_volume_id
      - capacity_volume_ids
    properties:
      cache_volume_id:
        type: string
        format: uuid
        description: "The identifier for the cache volume of this disk group."
      capacity_volume_ids:
        type: array
        description: "The identifiers for the capacity volumes of this disk group."
        items:
          type: string
          format: uuid

  StorageVolume:
    type: object
    discriminator: provider
    required:
      - id
      - size
      - encrypted
      - creation_time
      - volume_state
      - provider
    properties:
      id:
        type: string
        format: uuid
        description: "The unique identifier for the storage volume"
      size:
        type: integer
        format: int64
        description: "Size of the volume, in GiB"
      encrypted:
        type: boolean
        description: "Indicates whether the volume is encrypted"
      iops:
        type: integer
        format: int64
        description: "The IOPS capability of the volume, if known"
      creation_time:
        type: string
        format: date-time
        description: "When the volume is successfully created"
      volume_state:
        type: string
        description: "The state of the volume"
        enum:
          - CREATING
          - AVAILABLE
          - INUSE
          - DELETING
          - DELETED
          - ERROR
      provider:
        type: string
        description: "The cloud provider for this volume"
        enum:
          - AWS
      tags:
        type: object
        description: "Tags assigned in the volume, in key-value form"
        additionalProperties:
          type: string
  AwsEbsVolume:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    required:
      - vendor_id
      - volume_type
      - availability_zone
    allOf:
      - $ref: '#/definitions/StorageVolume'
      - properties:
          vendor_id:
            type: string
            description: "AWS-specific ID of the volume"
          volume_type:
            type: string
            description: "AWS type identifier for the volume"
            enum:
              - gp2
              - io1
              - st1
              - sc1
              - standard
          snapshot_id:
            type: string
            description: "The snapshot from which the volume was created, if applicable"
          kms_key_id:
            type: string
            description: "Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted."
          availability_zone:
            type: string
            description: "The availability zone in which the volume is created"
  StorageVolumeAttachment:
    type: object
    discriminator: provider
    required:
      - attach_time
      - esx_id
      - volume_id
      - attach_state
      - provider
    properties:
      attach_state:
        type: string
        description: "The state of the attachment"
        enum:
          - ATTACHING
          - ATTACHED
          - DETACHING
          - DETACHED
          - BUSY
      attach_time:
        type: string
        format: date-time
        description: "The time when the volume became ATTACHED"
      provider:
        type: string
        description: "The cloud provider for this attachment"
        enum:
          - AWS
      volume_id:
        type: string
        format: uuid
        description: "The unique ID for the volume being attached."
      esx_id:
        type: string
        format: uuid
        description: "The unique ID of the ESX to which the volume is attached."
  AwsEbsVolumeAttachment:
    type: object
    x-vmw-vapi-discriminated-by: "AWS"
    required:
      - device
      - ebs_id
      - instance_id
      - delete_on_termination
    allOf:
      - $ref: '#/definitions/StorageVolumeAttachment'
      - properties:
          device:
            type: string
            description: "The name of the device the volume appears as in the instance."
          ebs_id:
            type: string
            description: "The ID of the volume in the attachment."
          instance_id:
            type: string
            description: "The ID of the instance in the attachment."
          delete_on_termination:
            type: boolean
            description: "Volume to be deleted or not upon termination of instance."
  VmcLocale:
      type: object
      properties:
        locale:
          description: The locale to be used for translating responses for the session
          type: string



parameters:
  awsAccountIdParam:
    name: awsAccountId
    in: path
    description: AwsAccount identifier
    required: true
    type: string
  orgParam:
    name: org
    in: path
    description: Organization identifier
    required: true
    type: string
  orgTypeParam:
    name: orgtype
    in: query
    description: OrgType
    required: true
    type: string
  orgTypePropertyParam:
    name: property
    in: query
    description: Property defined for each orgtype
    required: true
    type: string
  orgQueryParam:
    name: org
    in: query
    description: Organization identifier
    required: true
    type: string
  offerTypeQueryParam:
    name: offer_type
    in: query
    description: >
      Offer Type
       * `ON_DEMAND` - on-demand subscription
       * `TERM` - term subscription
       * All subscriptions if not specified
    required: false
    type: string
    enum:
      - TERM
      - ON_DEMAND
  propertyNameParam:
    name: propertyName
    in: path
    description: Property Name identifier
    required: true
    type: string
  featureIdParam:
    name: featureId
    in: path
    description: Feature identifier
    required: true
    type: string
  featureActionQueryParam:
    name: action
    in: query
    description: >
      Feature action query parameter
       * `whitelist` - add the current org to the whitelistedKeys in feature configuration
       * `blacklist` - add the current org to the blacklistedKeys in feature configuration
       * `remove` - remove the current org (either in blacklistKeys/whitelistKeys) from feature configuration
    required: true
    type: string
  sddcParam:
    name: sddc
    in: path
    description: sddc
    required: true
    type: string
  sddcOptionalRequestParam:
    name: sddc
    in: query
    description: sddc
    required: false
    type: string
  forceRefreshParam:
    name: forceRefresh
    in: query
    description: When true, forces the mappings for datacenters to be refreshed for the connected account.
    required: false
    type: boolean
  taskParam:
    name: task
    in: path
    description: task Id
    required: true
    type: string
  taskTypeParam:
    name: taskType
    in: path
    description: taskType
    required: true
    type: string
  vifParam:
    name: vif
    in: path
    description: Virtual Interface Id
    required: true
    type: string
  esxParam:
    name: esx
    in: path
    description: esx identifier
    required: true
    type: string
  ipParam:
    name: id
    in: path
    description: ip allocation id
    required: true
    type: string
  gatewayTypeParam:
    name: gatewayType
    in: path
    description: gateway type (management gateway or compute gateway)
    required: true
    type: string
    enum:
      - mgws
      - cgws
  gatewayParam:
    name: gateway
    in: path
    description: gateway identifier
    required: true
    type: string
  ruleParam:
    name: rule
    in: path
    description: rule identifier
    required: true
    type: string
  networkIdParam:
    name: networkId
    in: path
    description: Logical network identifier
    required: true
    type: string
  subscriptionParam:
    name: subscription
    in: path
    description: SubscriptionId for an sddc.
    required: true
    type: string
  jobParam:
    name: job
    in: path
    description: usage job identifier
    required: true
    type: string
  batchParam:
    name: batch
    in: path
    description: usage job batch identifier
    required: true
    type: string
  vpnParam:
    name: vpnId
    in: path
    description: VPN identifier
    required: true
    type: string
  vpnVendorParam:
    name: vendor
    in: path
    description: VPN vendor identifier
    required: true
    type: string
    enum:
      - CISCO
  tokenIdParam:
    name: tokenId
    in: path
    description: Token identifier for external requests to api
    required: true
    type: string
  tokenContentParam:
    name: tokenContent
    in: path
    description: Token content for external requests to api
    required: true
    type: string
  showSensitiveData:
    name: showSensitiveData
    in: query
    description: |
      If = 'true', sensitive data like PSK shall be returned in plan text.
      If = 'false' sensitive data like PSK shall be returned as "*****".
    required: false
    type: string
  filterParam:
    name: $filter
    in: query
    description: |
      Filter expression

      Binary Operators: 'eq', 'ne', 'lt', 'gt', 'le', 'ge'

      Nested attributes are composed using '.'

      Dates must be formatted as YYYY-MM-DD

      Strings should enclosed in single quotes, escape single quote with two single quotes

      The special literal 'created' will be mapped to the time the resource was first created.

      NOTE: currently only ANDs of ORs is implemented.

      NOTE2: currently only range operators are implemented for created date.

      Examples:

        - $filter=(created gt '2016-08-09') and (org_id eq 278710ff4e-6b6d-4d4e-aefb-ca637f38609e)
        - $filter=(created eq '2016-08-09')
        - $filter=(created gt '2016-08-09') and (sddc.status eq 'READY')
    required: false
    type: string
  findOrphanParam:
    name: findOrphans
    in: query
    type: boolean
    required: false
    description: |
      When present and true, this invokes a search for orphans among the given entity.

      This is meant for entities that are meant to adhere to another's lifecycle, but otherwise may be left behind
      under certain circumstances (ex. aborted cleanup task, bad state, etc.).
  forceDeleteParam:
    name: force
    in: query
    type: boolean
    required: false
    description: When true, forces deletion of the desired entity and bypasses safety checks. Use with caution.
  managementVmIdParam:
    name: managementVmId
    in: path
    description: the management VM ID
    required: true
    type: string
  serviceParam:
    name: serviceId
    in: path
    description: The name (and id) of the connected service
    required: true
    type: string
  reverseProxyEpParam:
    name: endpoint
    in: path
    description: the reverse proxy endpoint.
    required: true
    type: string
  reverseProxyServerTypeParam:
    name: serverType
    in: path
    description: the PoP reverse proxy virtual server type.
    required: true
    type: string
    enum:
      - SERVER_443
      - SERVER_9443
  limitParam:
    name: limit
    in: query
    description: Maximum number of records to return (default 1000)
    required: false
    type: string
  linkedAccountIdPathParam:
    name: linkedAccountPathId
    in: path
    description: The linked connected account identifier
    required: true
    type: string
  linkedAccountIdParam:
    name: linkedAccountId
    in: query
    description: The linked connected account identifier
    required: false
    type: string
  forceEvenWhenSddcPresentParam:
    name: forceEvenWhenSddcPresent
    in: query
    description: When true, forcibly removes a connected account even when SDDC's are still linked to it.
    required: false
    type: boolean
  sddcConnectionIdPathParam:
    name: sddcConnectionId
    in: path
    description: The sddc connection identifier
    required: true
    type: string
  regionParam:
    name: region
    in: query
    description: The region of the cloud resources to work in
    required: false
    type: string
  clusterParam:
    name: cluster
    in: path
    description: cluster identifier
    required: true
    type: string
  versionsMaxParam:
    name: max
    in: query
    description: |
      If not present, return all past versions of the task

      If a valid Integer, return past 'max' versions in desc order
      start/end params should not be passed if this is used
    required: false
    type: integer
  versionsStartParam:
    name: start
    in: query
    description: |
      If not present, default = first version of the task
      It should be less than end param value, and not used if max param is passed
      If a valid Integer, this version would be the earliest in the response
      If value beyond the total task versions, this takes the last version
    required: false
    type: integer
  versionsEndParam:
    name: end
    in: query
    description: |
      If not present, default = last version of the task
      It should be greater than the start param value, and not used if max param is passed
      If a valid Integer, this version would be the latest in the response
      If value beyond the total task versions, this takes the last version
    required: false
    type: integer

  reservationParam:
    name: reservation
    in: path
    description: Reservation Identifier
    required: true
    type: string

  templateIdParam:
    name: templateId
    in: path
    description: SDDC Template identifier
    required: true
    type: string

# Suppress polymorphic definition unused warnings.
x-suppress:
  - $ref: '#/definitions/AwsCloudProvider'
  - $ref: '#/definitions/AwsSddcConfig'
  - $ref: '#/definitions/AwsSddcResourceConfig'
  - $ref: '#/definitions/AwsAgent'
  - $ref: '#/definitions/AwsEsxHost'
  - $ref: '#/definitions/TaskActiveStateInfo'
  - $ref: '#/definitions/SddcVpnStateAlert'
  - $ref: '#/definitions/ZeroSddcResourceConfig'
  - $ref: '#/definitions/AwsEbsVolume'
  - $ref: '#/definitions/AwsEbsVolumeAttachment'
